/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 404.0, "minX": 0.0, "maxY": 21684.0, "series": [{"data": [[0.0, 404.0], [0.1, 408.0], [0.2, 410.0], [0.3, 411.0], [0.4, 412.0], [0.5, 414.0], [0.6, 415.0], [0.7, 417.0], [0.8, 419.0], [0.9, 420.0], [1.0, 422.0], [1.1, 422.0], [1.2, 423.0], [1.3, 423.0], [1.4, 424.0], [1.5, 424.0], [1.6, 425.0], [1.7, 425.0], [1.8, 426.0], [1.9, 426.0], [2.0, 427.0], [2.1, 427.0], [2.2, 427.0], [2.3, 428.0], [2.4, 428.0], [2.5, 428.0], [2.6, 429.0], [2.7, 429.0], [2.8, 429.0], [2.9, 430.0], [3.0, 430.0], [3.1, 431.0], [3.2, 431.0], [3.3, 431.0], [3.4, 431.0], [3.5, 432.0], [3.6, 432.0], [3.7, 433.0], [3.8, 433.0], [3.9, 433.0], [4.0, 433.0], [4.1, 434.0], [4.2, 434.0], [4.3, 434.0], [4.4, 434.0], [4.5, 434.0], [4.6, 434.0], [4.7, 435.0], [4.8, 435.0], [4.9, 435.0], [5.0, 435.0], [5.1, 435.0], [5.2, 436.0], [5.3, 436.0], [5.4, 436.0], [5.5, 436.0], [5.6, 436.0], [5.7, 436.0], [5.8, 437.0], [5.9, 437.0], [6.0, 437.0], [6.1, 437.0], [6.2, 437.0], [6.3, 437.0], [6.4, 438.0], [6.5, 438.0], [6.6, 438.0], [6.7, 438.0], [6.8, 439.0], [6.9, 439.0], [7.0, 439.0], [7.1, 440.0], [7.2, 440.0], [7.3, 440.0], [7.4, 440.0], [7.5, 441.0], [7.6, 441.0], [7.7, 441.0], [7.8, 441.0], [7.9, 441.0], [8.0, 442.0], [8.1, 442.0], [8.2, 442.0], [8.3, 442.0], [8.4, 443.0], [8.5, 443.0], [8.6, 443.0], [8.7, 443.0], [8.8, 444.0], [8.9, 444.0], [9.0, 444.0], [9.1, 444.0], [9.2, 444.0], [9.3, 445.0], [9.4, 445.0], [9.5, 445.0], [9.6, 445.0], [9.7, 446.0], [9.8, 446.0], [9.9, 446.0], [10.0, 446.0], [10.1, 446.0], [10.2, 447.0], [10.3, 447.0], [10.4, 447.0], [10.5, 447.0], [10.6, 448.0], [10.7, 448.0], [10.8, 448.0], [10.9, 449.0], [11.0, 449.0], [11.1, 449.0], [11.2, 449.0], [11.3, 450.0], [11.4, 450.0], [11.5, 450.0], [11.6, 450.0], [11.7, 450.0], [11.8, 450.0], [11.9, 451.0], [12.0, 451.0], [12.1, 451.0], [12.2, 452.0], [12.3, 452.0], [12.4, 452.0], [12.5, 453.0], [12.6, 453.0], [12.7, 453.0], [12.8, 454.0], [12.9, 454.0], [13.0, 454.0], [13.1, 454.0], [13.2, 454.0], [13.3, 455.0], [13.4, 455.0], [13.5, 455.0], [13.6, 456.0], [13.7, 456.0], [13.8, 457.0], [13.9, 457.0], [14.0, 458.0], [14.1, 458.0], [14.2, 458.0], [14.3, 459.0], [14.4, 459.0], [14.5, 459.0], [14.6, 459.0], [14.7, 460.0], [14.8, 460.0], [14.9, 461.0], [15.0, 461.0], [15.1, 462.0], [15.2, 462.0], [15.3, 462.0], [15.4, 463.0], [15.5, 463.0], [15.6, 463.0], [15.7, 463.0], [15.8, 464.0], [15.9, 465.0], [16.0, 465.0], [16.1, 466.0], [16.2, 466.0], [16.3, 467.0], [16.4, 467.0], [16.5, 467.0], [16.6, 468.0], [16.7, 469.0], [16.8, 469.0], [16.9, 470.0], [17.0, 470.0], [17.1, 471.0], [17.2, 471.0], [17.3, 472.0], [17.4, 473.0], [17.5, 473.0], [17.6, 474.0], [17.7, 474.0], [17.8, 475.0], [17.9, 476.0], [18.0, 476.0], [18.1, 476.0], [18.2, 477.0], [18.3, 478.0], [18.4, 478.0], [18.5, 479.0], [18.6, 479.0], [18.7, 479.0], [18.8, 480.0], [18.9, 480.0], [19.0, 480.0], [19.1, 480.0], [19.2, 480.0], [19.3, 481.0], [19.4, 481.0], [19.5, 482.0], [19.6, 482.0], [19.7, 482.0], [19.8, 482.0], [19.9, 483.0], [20.0, 483.0], [20.1, 483.0], [20.2, 484.0], [20.3, 484.0], [20.4, 484.0], [20.5, 484.0], [20.6, 485.0], [20.7, 485.0], [20.8, 485.0], [20.9, 486.0], [21.0, 486.0], [21.1, 486.0], [21.2, 486.0], [21.3, 487.0], [21.4, 487.0], [21.5, 487.0], [21.6, 487.0], [21.7, 488.0], [21.8, 488.0], [21.9, 488.0], [22.0, 488.0], [22.1, 489.0], [22.2, 489.0], [22.3, 490.0], [22.4, 490.0], [22.5, 490.0], [22.6, 490.0], [22.7, 490.0], [22.8, 490.0], [22.9, 491.0], [23.0, 491.0], [23.1, 491.0], [23.2, 491.0], [23.3, 492.0], [23.4, 492.0], [23.5, 492.0], [23.6, 492.0], [23.7, 492.0], [23.8, 492.0], [23.9, 492.0], [24.0, 493.0], [24.1, 493.0], [24.2, 493.0], [24.3, 493.0], [24.4, 494.0], [24.5, 494.0], [24.6, 494.0], [24.7, 494.0], [24.8, 495.0], [24.9, 495.0], [25.0, 495.0], [25.1, 495.0], [25.2, 496.0], [25.3, 496.0], [25.4, 496.0], [25.5, 497.0], [25.6, 497.0], [25.7, 497.0], [25.8, 497.0], [25.9, 498.0], [26.0, 498.0], [26.1, 498.0], [26.2, 499.0], [26.3, 499.0], [26.4, 499.0], [26.5, 499.0], [26.6, 500.0], [26.7, 500.0], [26.8, 500.0], [26.9, 500.0], [27.0, 501.0], [27.1, 501.0], [27.2, 501.0], [27.3, 502.0], [27.4, 502.0], [27.5, 503.0], [27.6, 503.0], [27.7, 503.0], [27.8, 504.0], [27.9, 504.0], [28.0, 504.0], [28.1, 504.0], [28.2, 505.0], [28.3, 505.0], [28.4, 506.0], [28.5, 506.0], [28.6, 506.0], [28.7, 507.0], [28.8, 507.0], [28.9, 508.0], [29.0, 508.0], [29.1, 508.0], [29.2, 509.0], [29.3, 509.0], [29.4, 510.0], [29.5, 510.0], [29.6, 510.0], [29.7, 512.0], [29.8, 512.0], [29.9, 512.0], [30.0, 512.0], [30.1, 512.0], [30.2, 513.0], [30.3, 513.0], [30.4, 514.0], [30.5, 514.0], [30.6, 514.0], [30.7, 515.0], [30.8, 515.0], [30.9, 516.0], [31.0, 517.0], [31.1, 518.0], [31.2, 518.0], [31.3, 518.0], [31.4, 518.0], [31.5, 519.0], [31.6, 519.0], [31.7, 520.0], [31.8, 521.0], [31.9, 521.0], [32.0, 522.0], [32.1, 522.0], [32.2, 523.0], [32.3, 524.0], [32.4, 524.0], [32.5, 526.0], [32.6, 527.0], [32.7, 528.0], [32.8, 529.0], [32.9, 531.0], [33.0, 533.0], [33.1, 534.0], [33.2, 536.0], [33.3, 537.0], [33.4, 538.0], [33.5, 540.0], [33.6, 541.0], [33.7, 542.0], [33.8, 544.0], [33.9, 544.0], [34.0, 545.0], [34.1, 552.0], [34.2, 555.0], [34.3, 560.0], [34.4, 561.0], [34.5, 568.0], [34.6, 569.0], [34.7, 573.0], [34.8, 575.0], [34.9, 580.0], [35.0, 585.0], [35.1, 587.0], [35.2, 589.0], [35.3, 591.0], [35.4, 594.0], [35.5, 596.0], [35.6, 602.0], [35.7, 609.0], [35.8, 615.0], [35.9, 620.0], [36.0, 624.0], [36.1, 625.0], [36.2, 643.0], [36.3, 654.0], [36.4, 661.0], [36.5, 669.0], [36.6, 675.0], [36.7, 681.0], [36.8, 687.0], [36.9, 694.0], [37.0, 699.0], [37.1, 700.0], [37.2, 711.0], [37.3, 724.0], [37.4, 736.0], [37.5, 739.0], [37.6, 743.0], [37.7, 749.0], [37.8, 752.0], [37.9, 757.0], [38.0, 757.0], [38.1, 763.0], [38.2, 765.0], [38.3, 767.0], [38.4, 777.0], [38.5, 781.0], [38.6, 783.0], [38.7, 786.0], [38.8, 792.0], [38.9, 794.0], [39.0, 799.0], [39.1, 805.0], [39.2, 812.0], [39.3, 818.0], [39.4, 822.0], [39.5, 827.0], [39.6, 832.0], [39.7, 846.0], [39.8, 850.0], [39.9, 854.0], [40.0, 859.0], [40.1, 860.0], [40.2, 864.0], [40.3, 867.0], [40.4, 872.0], [40.5, 888.0], [40.6, 897.0], [40.7, 900.0], [40.8, 905.0], [40.9, 911.0], [41.0, 920.0], [41.1, 921.0], [41.2, 924.0], [41.3, 927.0], [41.4, 928.0], [41.5, 933.0], [41.6, 934.0], [41.7, 939.0], [41.8, 947.0], [41.9, 957.0], [42.0, 959.0], [42.1, 971.0], [42.2, 974.0], [42.3, 981.0], [42.4, 990.0], [42.5, 993.0], [42.6, 999.0], [42.7, 1007.0], [42.8, 1014.0], [42.9, 1025.0], [43.0, 1032.0], [43.1, 1039.0], [43.2, 1039.0], [43.3, 1041.0], [43.4, 1042.0], [43.5, 1046.0], [43.6, 1057.0], [43.7, 1067.0], [43.8, 1079.0], [43.9, 1089.0], [44.0, 1103.0], [44.1, 1117.0], [44.2, 1124.0], [44.3, 1137.0], [44.4, 1149.0], [44.5, 1160.0], [44.6, 1163.0], [44.7, 1171.0], [44.8, 1180.0], [44.9, 1189.0], [45.0, 1194.0], [45.1, 1207.0], [45.2, 1220.0], [45.3, 1229.0], [45.4, 1245.0], [45.5, 1258.0], [45.6, 1267.0], [45.7, 1273.0], [45.8, 1283.0], [45.9, 1309.0], [46.0, 1338.0], [46.1, 1348.0], [46.2, 1351.0], [46.3, 1361.0], [46.4, 1371.0], [46.5, 1393.0], [46.6, 1412.0], [46.7, 1420.0], [46.8, 1436.0], [46.9, 1445.0], [47.0, 1452.0], [47.1, 1466.0], [47.2, 1474.0], [47.3, 1484.0], [47.4, 1498.0], [47.5, 1504.0], [47.6, 1520.0], [47.7, 1523.0], [47.8, 1531.0], [47.9, 1539.0], [48.0, 1546.0], [48.1, 1557.0], [48.2, 1565.0], [48.3, 1569.0], [48.4, 1579.0], [48.5, 1588.0], [48.6, 1591.0], [48.7, 1599.0], [48.8, 1606.0], [48.9, 1613.0], [49.0, 1624.0], [49.1, 1627.0], [49.2, 1637.0], [49.3, 1649.0], [49.4, 1651.0], [49.5, 1658.0], [49.6, 1667.0], [49.7, 1669.0], [49.8, 1674.0], [49.9, 1683.0], [50.0, 1696.0], [50.1, 1697.0], [50.2, 1700.0], [50.3, 1709.0], [50.4, 1723.0], [50.5, 1729.0], [50.6, 1742.0], [50.7, 1748.0], [50.8, 1750.0], [50.9, 1752.0], [51.0, 1762.0], [51.1, 1783.0], [51.2, 1788.0], [51.3, 1803.0], [51.4, 1820.0], [51.5, 1833.0], [51.6, 1838.0], [51.7, 1846.0], [51.8, 1858.0], [51.9, 1865.0], [52.0, 1869.0], [52.1, 1873.0], [52.2, 1879.0], [52.3, 1888.0], [52.4, 1913.0], [52.5, 1919.0], [52.6, 1930.0], [52.7, 1938.0], [52.8, 1949.0], [52.9, 1954.0], [53.0, 1964.0], [53.1, 1965.0], [53.2, 1972.0], [53.3, 1975.0], [53.4, 1977.0], [53.5, 1988.0], [53.6, 1990.0], [53.7, 1992.0], [53.8, 1997.0], [53.9, 2016.0], [54.0, 2022.0], [54.1, 2030.0], [54.2, 2042.0], [54.3, 2047.0], [54.4, 2055.0], [54.5, 2062.0], [54.6, 2068.0], [54.7, 2077.0], [54.8, 2085.0], [54.9, 2094.0], [55.0, 2104.0], [55.1, 2113.0], [55.2, 2123.0], [55.3, 2134.0], [55.4, 2150.0], [55.5, 2158.0], [55.6, 2169.0], [55.7, 2180.0], [55.8, 2193.0], [55.9, 2209.0], [56.0, 2228.0], [56.1, 2235.0], [56.2, 2239.0], [56.3, 2251.0], [56.4, 2263.0], [56.5, 2273.0], [56.6, 2284.0], [56.7, 2289.0], [56.8, 2306.0], [56.9, 2316.0], [57.0, 2330.0], [57.1, 2337.0], [57.2, 2349.0], [57.3, 2355.0], [57.4, 2363.0], [57.5, 2374.0], [57.6, 2377.0], [57.7, 2385.0], [57.8, 2388.0], [57.9, 2393.0], [58.0, 2394.0], [58.1, 2397.0], [58.2, 2401.0], [58.3, 2412.0], [58.4, 2419.0], [58.5, 2429.0], [58.6, 2436.0], [58.7, 2445.0], [58.8, 2451.0], [58.9, 2456.0], [59.0, 2459.0], [59.1, 2468.0], [59.2, 2472.0], [59.3, 2474.0], [59.4, 2479.0], [59.5, 2483.0], [59.6, 2491.0], [59.7, 2492.0], [59.8, 2496.0], [59.9, 2501.0], [60.0, 2507.0], [60.1, 2512.0], [60.2, 2517.0], [60.3, 2521.0], [60.4, 2531.0], [60.5, 2542.0], [60.6, 2546.0], [60.7, 2553.0], [60.8, 2559.0], [60.9, 2567.0], [61.0, 2575.0], [61.1, 2579.0], [61.2, 2585.0], [61.3, 2591.0], [61.4, 2598.0], [61.5, 2601.0], [61.6, 2608.0], [61.7, 2616.0], [61.8, 2625.0], [61.9, 2635.0], [62.0, 2649.0], [62.1, 2652.0], [62.2, 2660.0], [62.3, 2665.0], [62.4, 2675.0], [62.5, 2697.0], [62.6, 2712.0], [62.7, 2724.0], [62.8, 2731.0], [62.9, 2744.0], [63.0, 2759.0], [63.1, 2770.0], [63.2, 2794.0], [63.3, 2808.0], [63.4, 2817.0], [63.5, 2830.0], [63.6, 2833.0], [63.7, 2843.0], [63.8, 2866.0], [63.9, 2883.0], [64.0, 2895.0], [64.1, 2903.0], [64.2, 2912.0], [64.3, 2928.0], [64.4, 2940.0], [64.5, 2944.0], [64.6, 2953.0], [64.7, 2960.0], [64.8, 2962.0], [64.9, 2978.0], [65.0, 2985.0], [65.1, 2996.0], [65.2, 3026.0], [65.3, 3049.0], [65.4, 3055.0], [65.5, 3071.0], [65.6, 3081.0], [65.7, 3106.0], [65.8, 3124.0], [65.9, 3127.0], [66.0, 3146.0], [66.1, 3173.0], [66.2, 3188.0], [66.3, 3196.0], [66.4, 3200.0], [66.5, 3229.0], [66.6, 3243.0], [66.7, 3256.0], [66.8, 3272.0], [66.9, 3286.0], [67.0, 3288.0], [67.1, 3295.0], [67.2, 3309.0], [67.3, 3324.0], [67.4, 3330.0], [67.5, 3341.0], [67.6, 3349.0], [67.7, 3358.0], [67.8, 3382.0], [67.9, 3400.0], [68.0, 3412.0], [68.1, 3427.0], [68.2, 3458.0], [68.3, 3492.0], [68.4, 3498.0], [68.5, 3511.0], [68.6, 3531.0], [68.7, 3545.0], [68.8, 3556.0], [68.9, 3568.0], [69.0, 3590.0], [69.1, 3611.0], [69.2, 3628.0], [69.3, 3635.0], [69.4, 3648.0], [69.5, 3662.0], [69.6, 3674.0], [69.7, 3726.0], [69.8, 3736.0], [69.9, 3744.0], [70.0, 3760.0], [70.1, 3762.0], [70.2, 3771.0], [70.3, 3784.0], [70.4, 3805.0], [70.5, 3816.0], [70.6, 3827.0], [70.7, 3856.0], [70.8, 3880.0], [70.9, 3895.0], [71.0, 3912.0], [71.1, 3939.0], [71.2, 3954.0], [71.3, 3963.0], [71.4, 3970.0], [71.5, 3981.0], [71.6, 3991.0], [71.7, 3997.0], [71.8, 4009.0], [71.9, 4032.0], [72.0, 4052.0], [72.1, 4069.0], [72.2, 4091.0], [72.3, 4108.0], [72.4, 4117.0], [72.5, 4123.0], [72.6, 4150.0], [72.7, 4171.0], [72.8, 4181.0], [72.9, 4208.0], [73.0, 4218.0], [73.1, 4247.0], [73.2, 4260.0], [73.3, 4293.0], [73.4, 4310.0], [73.5, 4316.0], [73.6, 4346.0], [73.7, 4370.0], [73.8, 4391.0], [73.9, 4414.0], [74.0, 4421.0], [74.1, 4442.0], [74.2, 4470.0], [74.3, 4511.0], [74.4, 4534.0], [74.5, 4547.0], [74.6, 4563.0], [74.7, 4574.0], [74.8, 4590.0], [74.9, 4621.0], [75.0, 4630.0], [75.1, 4640.0], [75.2, 4665.0], [75.3, 4691.0], [75.4, 4710.0], [75.5, 4741.0], [75.6, 4758.0], [75.7, 4777.0], [75.8, 4789.0], [75.9, 4803.0], [76.0, 4815.0], [76.1, 4846.0], [76.2, 4862.0], [76.3, 4880.0], [76.4, 4910.0], [76.5, 4933.0], [76.6, 4939.0], [76.7, 4952.0], [76.8, 4969.0], [76.9, 4991.0], [77.0, 5022.0], [77.1, 5037.0], [77.2, 5049.0], [77.3, 5071.0], [77.4, 5080.0], [77.5, 5101.0], [77.6, 5122.0], [77.7, 5128.0], [77.8, 5133.0], [77.9, 5150.0], [78.0, 5158.0], [78.1, 5181.0], [78.2, 5188.0], [78.3, 5213.0], [78.4, 5244.0], [78.5, 5261.0], [78.6, 5279.0], [78.7, 5326.0], [78.8, 5335.0], [78.9, 5360.0], [79.0, 5371.0], [79.1, 5386.0], [79.2, 5400.0], [79.3, 5437.0], [79.4, 5455.0], [79.5, 5463.0], [79.6, 5480.0], [79.7, 5487.0], [79.8, 5507.0], [79.9, 5543.0], [80.0, 5551.0], [80.1, 5576.0], [80.2, 5600.0], [80.3, 5629.0], [80.4, 5668.0], [80.5, 5692.0], [80.6, 5716.0], [80.7, 5727.0], [80.8, 5751.0], [80.9, 5784.0], [81.0, 5800.0], [81.1, 5822.0], [81.2, 5836.0], [81.3, 5865.0], [81.4, 5889.0], [81.5, 5904.0], [81.6, 5921.0], [81.7, 5934.0], [81.8, 5964.0], [81.9, 6018.0], [82.0, 6048.0], [82.1, 6052.0], [82.2, 6078.0], [82.3, 6095.0], [82.4, 6107.0], [82.5, 6163.0], [82.6, 6210.0], [82.7, 6249.0], [82.8, 6270.0], [82.9, 6283.0], [83.0, 6302.0], [83.1, 6314.0], [83.2, 6356.0], [83.3, 6387.0], [83.4, 6423.0], [83.5, 6469.0], [83.6, 6490.0], [83.7, 6507.0], [83.8, 6532.0], [83.9, 6539.0], [84.0, 6550.0], [84.1, 6586.0], [84.2, 6604.0], [84.3, 6610.0], [84.4, 6634.0], [84.5, 6663.0], [84.6, 6688.0], [84.7, 6717.0], [84.8, 6773.0], [84.9, 6811.0], [85.0, 6851.0], [85.1, 6871.0], [85.2, 6899.0], [85.3, 6943.0], [85.4, 7002.0], [85.5, 7029.0], [85.6, 7055.0], [85.7, 7084.0], [85.8, 7094.0], [85.9, 7122.0], [86.0, 7161.0], [86.1, 7168.0], [86.2, 7188.0], [86.3, 7228.0], [86.4, 7278.0], [86.5, 7310.0], [86.6, 7327.0], [86.7, 7354.0], [86.8, 7370.0], [86.9, 7378.0], [87.0, 7439.0], [87.1, 7460.0], [87.2, 7483.0], [87.3, 7497.0], [87.4, 7519.0], [87.5, 7560.0], [87.6, 7576.0], [87.7, 7596.0], [87.8, 7651.0], [87.9, 7665.0], [88.0, 7696.0], [88.1, 7722.0], [88.2, 7756.0], [88.3, 7787.0], [88.4, 7815.0], [88.5, 7835.0], [88.6, 7859.0], [88.7, 7888.0], [88.8, 7896.0], [88.9, 7928.0], [89.0, 7970.0], [89.1, 8001.0], [89.2, 8037.0], [89.3, 8070.0], [89.4, 8111.0], [89.5, 8148.0], [89.6, 8152.0], [89.7, 8159.0], [89.8, 8180.0], [89.9, 8233.0], [90.0, 8258.0], [90.1, 8269.0], [90.2, 8368.0], [90.3, 8388.0], [90.4, 8412.0], [90.5, 8488.0], [90.6, 8549.0], [90.7, 8582.0], [90.8, 8621.0], [90.9, 8642.0], [91.0, 8692.0], [91.1, 8731.0], [91.2, 8753.0], [91.3, 8786.0], [91.4, 8816.0], [91.5, 8857.0], [91.6, 8873.0], [91.7, 8907.0], [91.8, 8954.0], [91.9, 8967.0], [92.0, 9011.0], [92.1, 9068.0], [92.2, 9071.0], [92.3, 9100.0], [92.4, 9109.0], [92.5, 9120.0], [92.6, 9157.0], [92.7, 9228.0], [92.8, 9320.0], [92.9, 9411.0], [93.0, 9574.0], [93.1, 9668.0], [93.2, 9736.0], [93.3, 9787.0], [93.4, 9837.0], [93.5, 9886.0], [93.6, 9922.0], [93.7, 9965.0], [93.8, 9982.0], [93.9, 10015.0], [94.0, 10044.0], [94.1, 10186.0], [94.2, 10250.0], [94.3, 10324.0], [94.4, 10403.0], [94.5, 10437.0], [94.6, 10474.0], [94.7, 10519.0], [94.8, 10678.0], [94.9, 10735.0], [95.0, 10791.0], [95.1, 10843.0], [95.2, 10957.0], [95.3, 10987.0], [95.4, 11064.0], [95.5, 11119.0], [95.6, 11161.0], [95.7, 11253.0], [95.8, 11317.0], [95.9, 11457.0], [96.0, 11538.0], [96.1, 11688.0], [96.2, 11708.0], [96.3, 11901.0], [96.4, 12018.0], [96.5, 12086.0], [96.6, 12167.0], [96.7, 12268.0], [96.8, 12369.0], [96.9, 12402.0], [97.0, 12473.0], [97.1, 12550.0], [97.2, 12596.0], [97.3, 12657.0], [97.4, 12733.0], [97.5, 12860.0], [97.6, 12884.0], [97.7, 13036.0], [97.8, 13134.0], [97.9, 13295.0], [98.0, 13348.0], [98.1, 13424.0], [98.2, 13683.0], [98.3, 13798.0], [98.4, 14021.0], [98.5, 14178.0], [98.6, 14316.0], [98.7, 14464.0], [98.8, 14826.0], [98.9, 14911.0], [99.0, 15230.0], [99.1, 15633.0], [99.2, 15755.0], [99.3, 16357.0], [99.4, 16534.0], [99.5, 17551.0], [99.6, 18644.0], [99.7, 19012.0], [99.8, 19615.0], [99.9, 20120.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[0.0, 405.0], [0.1, 406.0], [0.2, 407.0], [0.3, 409.0], [0.4, 410.0], [0.5, 411.0], [0.6, 411.0], [0.7, 411.0], [0.8, 413.0], [0.9, 413.0], [1.0, 414.0], [1.1, 415.0], [1.2, 415.0], [1.3, 416.0], [1.4, 419.0], [1.5, 420.0], [1.6, 420.0], [1.7, 421.0], [1.8, 421.0], [1.9, 422.0], [2.0, 422.0], [2.1, 423.0], [2.2, 423.0], [2.3, 424.0], [2.4, 424.0], [2.5, 425.0], [2.6, 425.0], [2.7, 425.0], [2.8, 426.0], [2.9, 426.0], [3.0, 426.0], [3.1, 426.0], [3.2, 426.0], [3.3, 427.0], [3.4, 427.0], [3.5, 427.0], [3.6, 427.0], [3.7, 427.0], [3.8, 428.0], [3.9, 428.0], [4.0, 428.0], [4.1, 428.0], [4.2, 428.0], [4.3, 428.0], [4.4, 429.0], [4.5, 429.0], [4.6, 429.0], [4.7, 429.0], [4.8, 430.0], [4.9, 430.0], [5.0, 430.0], [5.1, 430.0], [5.2, 430.0], [5.3, 430.0], [5.4, 430.0], [5.5, 431.0], [5.6, 431.0], [5.7, 431.0], [5.8, 431.0], [5.9, 431.0], [6.0, 431.0], [6.1, 431.0], [6.2, 431.0], [6.3, 431.0], [6.4, 432.0], [6.5, 432.0], [6.6, 432.0], [6.7, 432.0], [6.8, 432.0], [6.9, 432.0], [7.0, 432.0], [7.1, 432.0], [7.2, 432.0], [7.3, 433.0], [7.4, 433.0], [7.5, 433.0], [7.6, 433.0], [7.7, 433.0], [7.8, 433.0], [7.9, 433.0], [8.0, 433.0], [8.1, 433.0], [8.2, 433.0], [8.3, 434.0], [8.4, 434.0], [8.5, 434.0], [8.6, 434.0], [8.7, 434.0], [8.8, 434.0], [8.9, 434.0], [9.0, 434.0], [9.1, 434.0], [9.2, 434.0], [9.3, 434.0], [9.4, 435.0], [9.5, 435.0], [9.6, 435.0], [9.7, 435.0], [9.8, 435.0], [9.9, 435.0], [10.0, 435.0], [10.1, 436.0], [10.2, 436.0], [10.3, 436.0], [10.4, 436.0], [10.5, 436.0], [10.6, 436.0], [10.7, 436.0], [10.8, 436.0], [10.9, 436.0], [11.0, 437.0], [11.1, 437.0], [11.2, 437.0], [11.3, 437.0], [11.4, 437.0], [11.5, 437.0], [11.6, 437.0], [11.7, 437.0], [11.8, 437.0], [11.9, 437.0], [12.0, 438.0], [12.1, 438.0], [12.2, 438.0], [12.3, 438.0], [12.4, 438.0], [12.5, 438.0], [12.6, 438.0], [12.7, 438.0], [12.8, 439.0], [12.9, 439.0], [13.0, 439.0], [13.1, 439.0], [13.2, 439.0], [13.3, 439.0], [13.4, 439.0], [13.5, 439.0], [13.6, 439.0], [13.7, 439.0], [13.8, 440.0], [13.9, 440.0], [14.0, 440.0], [14.1, 440.0], [14.2, 440.0], [14.3, 440.0], [14.4, 440.0], [14.5, 440.0], [14.6, 440.0], [14.7, 440.0], [14.8, 441.0], [14.9, 441.0], [15.0, 441.0], [15.1, 441.0], [15.2, 441.0], [15.3, 441.0], [15.4, 441.0], [15.5, 441.0], [15.6, 442.0], [15.7, 442.0], [15.8, 442.0], [15.9, 442.0], [16.0, 442.0], [16.1, 442.0], [16.2, 443.0], [16.3, 443.0], [16.4, 443.0], [16.5, 443.0], [16.6, 443.0], [16.7, 443.0], [16.8, 443.0], [16.9, 443.0], [17.0, 443.0], [17.1, 444.0], [17.2, 444.0], [17.3, 444.0], [17.4, 444.0], [17.5, 444.0], [17.6, 444.0], [17.7, 444.0], [17.8, 444.0], [17.9, 444.0], [18.0, 444.0], [18.1, 445.0], [18.2, 445.0], [18.3, 445.0], [18.4, 445.0], [18.5, 445.0], [18.6, 445.0], [18.7, 445.0], [18.8, 445.0], [18.9, 445.0], [19.0, 446.0], [19.1, 446.0], [19.2, 446.0], [19.3, 446.0], [19.4, 446.0], [19.5, 446.0], [19.6, 446.0], [19.7, 446.0], [19.8, 447.0], [19.9, 447.0], [20.0, 447.0], [20.1, 447.0], [20.2, 447.0], [20.3, 447.0], [20.4, 447.0], [20.5, 447.0], [20.6, 448.0], [20.7, 448.0], [20.8, 448.0], [20.9, 448.0], [21.0, 448.0], [21.1, 448.0], [21.2, 448.0], [21.3, 449.0], [21.4, 449.0], [21.5, 449.0], [21.6, 449.0], [21.7, 449.0], [21.8, 449.0], [21.9, 450.0], [22.0, 450.0], [22.1, 450.0], [22.2, 450.0], [22.3, 450.0], [22.4, 451.0], [22.5, 451.0], [22.6, 451.0], [22.7, 451.0], [22.8, 451.0], [22.9, 452.0], [23.0, 452.0], [23.1, 452.0], [23.2, 452.0], [23.3, 452.0], [23.4, 452.0], [23.5, 452.0], [23.6, 453.0], [23.7, 453.0], [23.8, 453.0], [23.9, 453.0], [24.0, 453.0], [24.1, 453.0], [24.2, 453.0], [24.3, 454.0], [24.4, 454.0], [24.5, 454.0], [24.6, 454.0], [24.7, 454.0], [24.8, 455.0], [24.9, 455.0], [25.0, 455.0], [25.1, 455.0], [25.2, 455.0], [25.3, 455.0], [25.4, 456.0], [25.5, 456.0], [25.6, 456.0], [25.7, 456.0], [25.8, 456.0], [25.9, 456.0], [26.0, 457.0], [26.1, 457.0], [26.2, 457.0], [26.3, 457.0], [26.4, 457.0], [26.5, 457.0], [26.6, 457.0], [26.7, 457.0], [26.8, 458.0], [26.9, 458.0], [27.0, 458.0], [27.1, 458.0], [27.2, 458.0], [27.3, 459.0], [27.4, 459.0], [27.5, 459.0], [27.6, 459.0], [27.7, 459.0], [27.8, 460.0], [27.9, 460.0], [28.0, 460.0], [28.1, 460.0], [28.2, 460.0], [28.3, 460.0], [28.4, 461.0], [28.5, 461.0], [28.6, 461.0], [28.7, 461.0], [28.8, 461.0], [28.9, 461.0], [29.0, 461.0], [29.1, 461.0], [29.2, 461.0], [29.3, 462.0], [29.4, 462.0], [29.5, 462.0], [29.6, 462.0], [29.7, 462.0], [29.8, 463.0], [29.9, 463.0], [30.0, 463.0], [30.1, 463.0], [30.2, 463.0], [30.3, 464.0], [30.4, 464.0], [30.5, 464.0], [30.6, 464.0], [30.7, 464.0], [30.8, 465.0], [30.9, 465.0], [31.0, 465.0], [31.1, 465.0], [31.2, 465.0], [31.3, 466.0], [31.4, 466.0], [31.5, 466.0], [31.6, 466.0], [31.7, 467.0], [31.8, 467.0], [31.9, 467.0], [32.0, 467.0], [32.1, 468.0], [32.2, 468.0], [32.3, 468.0], [32.4, 468.0], [32.5, 468.0], [32.6, 469.0], [32.7, 469.0], [32.8, 469.0], [32.9, 469.0], [33.0, 469.0], [33.1, 469.0], [33.2, 470.0], [33.3, 470.0], [33.4, 470.0], [33.5, 470.0], [33.6, 471.0], [33.7, 471.0], [33.8, 471.0], [33.9, 471.0], [34.0, 472.0], [34.1, 472.0], [34.2, 472.0], [34.3, 472.0], [34.4, 472.0], [34.5, 473.0], [34.6, 473.0], [34.7, 473.0], [34.8, 474.0], [34.9, 474.0], [35.0, 474.0], [35.1, 475.0], [35.2, 475.0], [35.3, 475.0], [35.4, 475.0], [35.5, 476.0], [35.6, 476.0], [35.7, 476.0], [35.8, 476.0], [35.9, 477.0], [36.0, 477.0], [36.1, 477.0], [36.2, 477.0], [36.3, 477.0], [36.4, 478.0], [36.5, 478.0], [36.6, 478.0], [36.7, 478.0], [36.8, 478.0], [36.9, 478.0], [37.0, 479.0], [37.1, 479.0], [37.2, 479.0], [37.3, 480.0], [37.4, 480.0], [37.5, 480.0], [37.6, 480.0], [37.7, 480.0], [37.8, 480.0], [37.9, 480.0], [38.0, 480.0], [38.1, 481.0], [38.2, 481.0], [38.3, 481.0], [38.4, 481.0], [38.5, 481.0], [38.6, 481.0], [38.7, 481.0], [38.8, 482.0], [38.9, 482.0], [39.0, 482.0], [39.1, 482.0], [39.2, 482.0], [39.3, 483.0], [39.4, 483.0], [39.5, 483.0], [39.6, 483.0], [39.7, 483.0], [39.8, 483.0], [39.9, 483.0], [40.0, 484.0], [40.1, 484.0], [40.2, 484.0], [40.3, 484.0], [40.4, 484.0], [40.5, 485.0], [40.6, 485.0], [40.7, 485.0], [40.8, 485.0], [40.9, 485.0], [41.0, 485.0], [41.1, 485.0], [41.2, 485.0], [41.3, 485.0], [41.4, 485.0], [41.5, 486.0], [41.6, 486.0], [41.7, 486.0], [41.8, 486.0], [41.9, 486.0], [42.0, 486.0], [42.1, 487.0], [42.2, 487.0], [42.3, 487.0], [42.4, 487.0], [42.5, 487.0], [42.6, 487.0], [42.7, 487.0], [42.8, 488.0], [42.9, 488.0], [43.0, 488.0], [43.1, 488.0], [43.2, 488.0], [43.3, 488.0], [43.4, 488.0], [43.5, 489.0], [43.6, 489.0], [43.7, 489.0], [43.8, 489.0], [43.9, 489.0], [44.0, 489.0], [44.1, 489.0], [44.2, 489.0], [44.3, 490.0], [44.4, 490.0], [44.5, 490.0], [44.6, 490.0], [44.7, 490.0], [44.8, 490.0], [44.9, 490.0], [45.0, 490.0], [45.1, 490.0], [45.2, 491.0], [45.3, 491.0], [45.4, 491.0], [45.5, 491.0], [45.6, 491.0], [45.7, 492.0], [45.8, 492.0], [45.9, 492.0], [46.0, 492.0], [46.1, 492.0], [46.2, 492.0], [46.3, 492.0], [46.4, 493.0], [46.5, 493.0], [46.6, 493.0], [46.7, 493.0], [46.8, 493.0], [46.9, 494.0], [47.0, 494.0], [47.1, 494.0], [47.2, 494.0], [47.3, 494.0], [47.4, 495.0], [47.5, 495.0], [47.6, 495.0], [47.7, 495.0], [47.8, 495.0], [47.9, 495.0], [48.0, 495.0], [48.1, 496.0], [48.2, 496.0], [48.3, 496.0], [48.4, 496.0], [48.5, 496.0], [48.6, 496.0], [48.7, 496.0], [48.8, 497.0], [48.9, 497.0], [49.0, 497.0], [49.1, 497.0], [49.2, 497.0], [49.3, 497.0], [49.4, 497.0], [49.5, 497.0], [49.6, 497.0], [49.7, 497.0], [49.8, 498.0], [49.9, 498.0], [50.0, 498.0], [50.1, 498.0], [50.2, 498.0], [50.3, 498.0], [50.4, 499.0], [50.5, 499.0], [50.6, 499.0], [50.7, 499.0], [50.8, 499.0], [50.9, 499.0], [51.0, 499.0], [51.1, 500.0], [51.2, 500.0], [51.3, 500.0], [51.4, 500.0], [51.5, 500.0], [51.6, 500.0], [51.7, 500.0], [51.8, 500.0], [51.9, 500.0], [52.0, 501.0], [52.1, 501.0], [52.2, 501.0], [52.3, 501.0], [52.4, 501.0], [52.5, 501.0], [52.6, 501.0], [52.7, 501.0], [52.8, 501.0], [52.9, 502.0], [53.0, 502.0], [53.1, 502.0], [53.2, 502.0], [53.3, 502.0], [53.4, 502.0], [53.5, 503.0], [53.6, 503.0], [53.7, 503.0], [53.8, 503.0], [53.9, 503.0], [54.0, 503.0], [54.1, 504.0], [54.2, 504.0], [54.3, 504.0], [54.4, 504.0], [54.5, 504.0], [54.6, 505.0], [54.7, 505.0], [54.8, 505.0], [54.9, 505.0], [55.0, 505.0], [55.1, 505.0], [55.2, 506.0], [55.3, 506.0], [55.4, 506.0], [55.5, 506.0], [55.6, 506.0], [55.7, 506.0], [55.8, 507.0], [55.9, 507.0], [56.0, 507.0], [56.1, 507.0], [56.2, 508.0], [56.3, 508.0], [56.4, 508.0], [56.5, 508.0], [56.6, 508.0], [56.7, 508.0], [56.8, 509.0], [56.9, 509.0], [57.0, 509.0], [57.1, 509.0], [57.2, 509.0], [57.3, 509.0], [57.4, 510.0], [57.5, 510.0], [57.6, 510.0], [57.7, 510.0], [57.8, 510.0], [57.9, 510.0], [58.0, 511.0], [58.1, 511.0], [58.2, 511.0], [58.3, 511.0], [58.4, 511.0], [58.5, 511.0], [58.6, 512.0], [58.7, 512.0], [58.8, 512.0], [58.9, 512.0], [59.0, 512.0], [59.1, 513.0], [59.2, 513.0], [59.3, 513.0], [59.4, 513.0], [59.5, 514.0], [59.6, 514.0], [59.7, 515.0], [59.8, 515.0], [59.9, 515.0], [60.0, 515.0], [60.1, 516.0], [60.2, 516.0], [60.3, 517.0], [60.4, 517.0], [60.5, 517.0], [60.6, 517.0], [60.7, 517.0], [60.8, 518.0], [60.9, 518.0], [61.0, 518.0], [61.1, 518.0], [61.2, 519.0], [61.3, 519.0], [61.4, 520.0], [61.5, 520.0], [61.6, 520.0], [61.7, 521.0], [61.8, 521.0], [61.9, 522.0], [62.0, 522.0], [62.1, 523.0], [62.2, 523.0], [62.3, 524.0], [62.4, 524.0], [62.5, 524.0], [62.6, 525.0], [62.7, 525.0], [62.8, 526.0], [62.9, 526.0], [63.0, 527.0], [63.1, 527.0], [63.2, 528.0], [63.3, 528.0], [63.4, 529.0], [63.5, 530.0], [63.6, 530.0], [63.7, 531.0], [63.8, 532.0], [63.9, 532.0], [64.0, 533.0], [64.1, 533.0], [64.2, 534.0], [64.3, 535.0], [64.4, 535.0], [64.5, 536.0], [64.6, 537.0], [64.7, 538.0], [64.8, 538.0], [64.9, 539.0], [65.0, 539.0], [65.1, 540.0], [65.2, 541.0], [65.3, 541.0], [65.4, 543.0], [65.5, 543.0], [65.6, 545.0], [65.7, 545.0], [65.8, 547.0], [65.9, 548.0], [66.0, 549.0], [66.1, 549.0], [66.2, 551.0], [66.3, 552.0], [66.4, 554.0], [66.5, 555.0], [66.6, 556.0], [66.7, 557.0], [66.8, 558.0], [66.9, 560.0], [67.0, 562.0], [67.1, 564.0], [67.2, 565.0], [67.3, 565.0], [67.4, 566.0], [67.5, 568.0], [67.6, 568.0], [67.7, 569.0], [67.8, 570.0], [67.9, 571.0], [68.0, 572.0], [68.1, 574.0], [68.2, 574.0], [68.3, 575.0], [68.4, 576.0], [68.5, 578.0], [68.6, 579.0], [68.7, 579.0], [68.8, 580.0], [68.9, 581.0], [69.0, 582.0], [69.1, 583.0], [69.2, 586.0], [69.3, 587.0], [69.4, 591.0], [69.5, 595.0], [69.6, 596.0], [69.7, 598.0], [69.8, 598.0], [69.9, 599.0], [70.0, 600.0], [70.1, 600.0], [70.2, 602.0], [70.3, 603.0], [70.4, 607.0], [70.5, 609.0], [70.6, 611.0], [70.7, 615.0], [70.8, 620.0], [70.9, 621.0], [71.0, 623.0], [71.1, 625.0], [71.2, 627.0], [71.3, 629.0], [71.4, 631.0], [71.5, 633.0], [71.6, 634.0], [71.7, 636.0], [71.8, 640.0], [71.9, 643.0], [72.0, 649.0], [72.1, 655.0], [72.2, 658.0], [72.3, 659.0], [72.4, 663.0], [72.5, 666.0], [72.6, 668.0], [72.7, 670.0], [72.8, 672.0], [72.9, 673.0], [73.0, 675.0], [73.1, 685.0], [73.2, 687.0], [73.3, 688.0], [73.4, 690.0], [73.5, 691.0], [73.6, 693.0], [73.7, 695.0], [73.8, 696.0], [73.9, 700.0], [74.0, 703.0], [74.1, 706.0], [74.2, 708.0], [74.3, 719.0], [74.4, 722.0], [74.5, 737.0], [74.6, 740.0], [74.7, 743.0], [74.8, 747.0], [74.9, 749.0], [75.0, 755.0], [75.1, 758.0], [75.2, 759.0], [75.3, 764.0], [75.4, 766.0], [75.5, 770.0], [75.6, 772.0], [75.7, 776.0], [75.8, 780.0], [75.9, 785.0], [76.0, 789.0], [76.1, 791.0], [76.2, 794.0], [76.3, 795.0], [76.4, 800.0], [76.5, 801.0], [76.6, 806.0], [76.7, 806.0], [76.8, 809.0], [76.9, 815.0], [77.0, 820.0], [77.1, 821.0], [77.2, 826.0], [77.3, 831.0], [77.4, 834.0], [77.5, 841.0], [77.6, 845.0], [77.7, 848.0], [77.8, 852.0], [77.9, 854.0], [78.0, 858.0], [78.1, 863.0], [78.2, 867.0], [78.3, 868.0], [78.4, 871.0], [78.5, 880.0], [78.6, 884.0], [78.7, 887.0], [78.8, 894.0], [78.9, 898.0], [79.0, 902.0], [79.1, 906.0], [79.2, 911.0], [79.3, 915.0], [79.4, 917.0], [79.5, 919.0], [79.6, 921.0], [79.7, 922.0], [79.8, 924.0], [79.9, 926.0], [80.0, 932.0], [80.1, 934.0], [80.2, 940.0], [80.3, 940.0], [80.4, 945.0], [80.5, 947.0], [80.6, 949.0], [80.7, 951.0], [80.8, 954.0], [80.9, 957.0], [81.0, 959.0], [81.1, 961.0], [81.2, 962.0], [81.3, 964.0], [81.4, 969.0], [81.5, 975.0], [81.6, 980.0], [81.7, 989.0], [81.8, 995.0], [81.9, 997.0], [82.0, 1001.0], [82.1, 1006.0], [82.2, 1011.0], [82.3, 1013.0], [82.4, 1021.0], [82.5, 1023.0], [82.6, 1030.0], [82.7, 1036.0], [82.8, 1040.0], [82.9, 1041.0], [83.0, 1044.0], [83.1, 1052.0], [83.2, 1060.0], [83.3, 1070.0], [83.4, 1076.0], [83.5, 1085.0], [83.6, 1090.0], [83.7, 1094.0], [83.8, 1097.0], [83.9, 1105.0], [84.0, 1108.0], [84.1, 1124.0], [84.2, 1132.0], [84.3, 1149.0], [84.4, 1151.0], [84.5, 1154.0], [84.6, 1156.0], [84.7, 1174.0], [84.8, 1180.0], [84.9, 1185.0], [85.0, 1192.0], [85.1, 1195.0], [85.2, 1197.0], [85.3, 1205.0], [85.4, 1212.0], [85.5, 1219.0], [85.6, 1226.0], [85.7, 1235.0], [85.8, 1250.0], [85.9, 1273.0], [86.0, 1280.0], [86.1, 1288.0], [86.2, 1305.0], [86.3, 1325.0], [86.4, 1344.0], [86.5, 1353.0], [86.6, 1370.0], [86.7, 1386.0], [86.8, 1405.0], [86.9, 1428.0], [87.0, 1431.0], [87.1, 1443.0], [87.2, 1449.0], [87.3, 1465.0], [87.4, 1475.0], [87.5, 1482.0], [87.6, 1504.0], [87.7, 1522.0], [87.8, 1531.0], [87.9, 1537.0], [88.0, 1544.0], [88.1, 1549.0], [88.2, 1558.0], [88.3, 1565.0], [88.4, 1574.0], [88.5, 1580.0], [88.6, 1593.0], [88.7, 1600.0], [88.8, 1613.0], [88.9, 1629.0], [89.0, 1634.0], [89.1, 1639.0], [89.2, 1653.0], [89.3, 1662.0], [89.4, 1668.0], [89.5, 1683.0], [89.6, 1692.0], [89.7, 1716.0], [89.8, 1732.0], [89.9, 1762.0], [90.0, 1772.0], [90.1, 1778.0], [90.2, 1789.0], [90.3, 1800.0], [90.4, 1808.0], [90.5, 1844.0], [90.6, 1862.0], [90.7, 1873.0], [90.8, 1904.0], [90.9, 1936.0], [91.0, 1943.0], [91.1, 1961.0], [91.2, 1974.0], [91.3, 2004.0], [91.4, 2015.0], [91.5, 2036.0], [91.6, 2064.0], [91.7, 2081.0], [91.8, 2101.0], [91.9, 2142.0], [92.0, 2166.0], [92.1, 2201.0], [92.2, 2213.0], [92.3, 2254.0], [92.4, 2273.0], [92.5, 2302.0], [92.6, 2349.0], [92.7, 2351.0], [92.8, 2356.0], [92.9, 2402.0], [93.0, 2426.0], [93.1, 2438.0], [93.2, 2498.0], [93.3, 2536.0], [93.4, 2552.0], [93.5, 2606.0], [93.6, 2643.0], [93.7, 2711.0], [93.8, 2721.0], [93.9, 2770.0], [94.0, 2802.0], [94.1, 2832.0], [94.2, 2885.0], [94.3, 2942.0], [94.4, 2989.0], [94.5, 3020.0], [94.6, 3060.0], [94.7, 3133.0], [94.8, 3174.0], [94.9, 3235.0], [95.0, 3295.0], [95.1, 3337.0], [95.2, 3362.0], [95.3, 3408.0], [95.4, 3448.0], [95.5, 3559.0], [95.6, 3620.0], [95.7, 3729.0], [95.8, 3826.0], [95.9, 3925.0], [96.0, 3976.0], [96.1, 4041.0], [96.2, 4119.0], [96.3, 4263.0], [96.4, 4318.0], [96.5, 4357.0], [96.6, 4534.0], [96.7, 4585.0], [96.8, 4678.0], [96.9, 4807.0], [97.0, 4930.0], [97.1, 4977.0], [97.2, 5154.0], [97.3, 5272.0], [97.4, 5330.0], [97.5, 5471.0], [97.6, 5712.0], [97.7, 5915.0], [97.8, 6241.0], [97.9, 6552.0], [98.0, 6839.0], [98.1, 6926.0], [98.2, 7402.0], [98.3, 7519.0], [98.4, 7677.0], [98.5, 7742.0], [98.6, 7877.0], [98.7, 8307.0], [98.8, 8470.0], [98.9, 8675.0], [99.0, 8931.0], [99.1, 9489.0], [99.2, 9761.0], [99.3, 9982.0], [99.4, 10323.0], [99.5, 10950.0], [99.6, 11485.0], [99.7, 13541.0], [99.8, 14484.0], [99.9, 16024.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 2028.0, "series": [{"data": [[400.0, 1054.0], [500.0, 358.0], [600.0, 59.0], [700.0, 78.0], [800.0, 64.0], [900.0, 79.0], [1000.0, 54.0], [1100.0, 43.0], [1200.0, 31.0], [1300.0, 27.0], [1400.0, 35.0], [1500.0, 53.0], [1600.0, 56.0], [1700.0, 43.0], [1800.0, 45.0], [1900.0, 57.0], [2000.0, 44.0], [2100.0, 37.0], [2200.0, 34.0], [2300.0, 57.0], [2400.0, 69.0], [2500.0, 62.0], [2600.0, 43.0], [2700.0, 28.0], [2800.0, 32.0], [2900.0, 43.0], [3000.0, 22.0], [3100.0, 29.0], [3200.0, 28.0], [3300.0, 31.0], [3400.0, 21.0], [3500.0, 24.0], [3700.0, 28.0], [3600.0, 25.0], [3800.0, 23.0], [3900.0, 33.0], [4000.0, 18.0], [4100.0, 27.0], [4200.0, 18.0], [4300.0, 19.0], [4400.0, 18.0], [4600.0, 22.0], [4500.0, 22.0], [4800.0, 20.0], [4700.0, 19.0], [5100.0, 29.0], [4900.0, 22.0], [5000.0, 22.0], [5300.0, 22.0], [5200.0, 17.0], [5400.0, 24.0], [5600.0, 13.0], [5500.0, 15.0], [5700.0, 19.0], [5800.0, 18.0], [5900.0, 18.0], [6000.0, 18.0], [6100.0, 10.0], [6200.0, 15.0], [6300.0, 14.0], [6500.0, 21.0], [6600.0, 19.0], [6400.0, 12.0], [6700.0, 10.0], [6800.0, 13.0], [6900.0, 7.0], [7000.0, 17.0], [7100.0, 18.0], [7200.0, 6.0], [7300.0, 21.0], [7400.0, 14.0], [7500.0, 16.0], [7600.0, 12.0], [7700.0, 14.0], [7800.0, 18.0], [7900.0, 11.0], [8000.0, 10.0], [8100.0, 20.0], [8200.0, 11.0], [8600.0, 9.0], [8300.0, 9.0], [8400.0, 7.0], [8700.0, 12.0], [8500.0, 10.0], [8900.0, 12.0], [8800.0, 15.0], [9100.0, 15.0], [9000.0, 12.0], [9200.0, 4.0], [9300.0, 5.0], [9600.0, 5.0], [9700.0, 7.0], [9500.0, 1.0], [9400.0, 4.0], [9900.0, 14.0], [10100.0, 3.0], [9800.0, 7.0], [10000.0, 8.0], [10200.0, 4.0], [10500.0, 6.0], [10400.0, 11.0], [10300.0, 5.0], [10700.0, 7.0], [10600.0, 2.0], [11100.0, 10.0], [11000.0, 4.0], [10900.0, 7.0], [10800.0, 5.0], [11200.0, 5.0], [11400.0, 5.0], [11500.0, 2.0], [11300.0, 3.0], [11600.0, 5.0], [11700.0, 4.0], [11800.0, 1.0], [12000.0, 8.0], [12200.0, 4.0], [12100.0, 3.0], [11900.0, 2.0], [12600.0, 6.0], [12300.0, 6.0], [12700.0, 5.0], [12400.0, 5.0], [12500.0, 8.0], [13100.0, 5.0], [13000.0, 3.0], [12800.0, 5.0], [12900.0, 2.0], [13200.0, 2.0], [13300.0, 7.0], [13700.0, 3.0], [13400.0, 1.0], [13500.0, 1.0], [13800.0, 3.0], [13600.0, 4.0], [14100.0, 3.0], [14300.0, 4.0], [14000.0, 2.0], [14200.0, 2.0], [14400.0, 2.0], [14800.0, 3.0], [14700.0, 1.0], [14600.0, 1.0], [14900.0, 4.0], [15200.0, 3.0], [15300.0, 1.0], [15100.0, 1.0], [15400.0, 1.0], [15700.0, 4.0], [15600.0, 1.0], [16000.0, 1.0], [16300.0, 2.0], [15900.0, 2.0], [16900.0, 2.0], [16400.0, 2.0], [17000.0, 1.0], [16500.0, 1.0], [17600.0, 1.0], [17500.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [19000.0, 2.0], [19100.0, 1.0], [18800.0, 1.0], [18700.0, 2.0], [19300.0, 1.0], [18600.0, 1.0], [19600.0, 3.0], [19700.0, 1.0], [20100.0, 1.0], [21300.0, 2.0], [21600.0, 1.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[400.0, 2028.0], [500.0, 751.0], [600.0, 153.0], [700.0, 101.0], [800.0, 101.0], [900.0, 120.0], [1000.0, 73.0], [1100.0, 56.0], [1200.0, 38.0], [1300.0, 23.0], [1400.0, 33.0], [1500.0, 44.0], [1600.0, 38.0], [1700.0, 25.0], [1800.0, 20.0], [1900.0, 19.0], [2000.0, 21.0], [2100.0, 12.0], [2300.0, 16.0], [2200.0, 16.0], [2400.0, 13.0], [2500.0, 10.0], [2600.0, 6.0], [2700.0, 14.0], [2800.0, 9.0], [2900.0, 9.0], [3000.0, 8.0], [3100.0, 8.0], [3300.0, 10.0], [3200.0, 7.0], [3400.0, 7.0], [3500.0, 5.0], [3600.0, 5.0], [3700.0, 3.0], [3800.0, 5.0], [3900.0, 6.0], [4000.0, 5.0], [4200.0, 6.0], [4300.0, 5.0], [4100.0, 3.0], [4500.0, 4.0], [4600.0, 4.0], [4400.0, 3.0], [4800.0, 4.0], [4700.0, 3.0], [4900.0, 5.0], [5100.0, 2.0], [5000.0, 2.0], [5300.0, 6.0], [5200.0, 5.0], [5600.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5700.0, 4.0], [6000.0, 2.0], [5900.0, 2.0], [6300.0, 1.0], [6200.0, 2.0], [6500.0, 4.0], [6400.0, 1.0], [6700.0, 1.0], [6800.0, 2.0], [6900.0, 3.0], [7100.0, 1.0], [7400.0, 4.0], [7200.0, 2.0], [7500.0, 3.0], [7600.0, 2.0], [7800.0, 4.0], [7700.0, 5.0], [8100.0, 1.0], [8300.0, 4.0], [8600.0, 2.0], [8400.0, 2.0], [8700.0, 2.0], [8500.0, 2.0], [8800.0, 1.0], [9200.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9400.0, 2.0], [9700.0, 2.0], [9600.0, 3.0], [9900.0, 3.0], [10000.0, 1.0], [10200.0, 2.0], [10700.0, 1.0], [10300.0, 1.0], [10600.0, 1.0], [10900.0, 2.0], [11200.0, 1.0], [11300.0, 1.0], [11400.0, 3.0], [12100.0, 1.0], [12500.0, 1.0], [13500.0, 1.0], [14200.0, 2.0], [14700.0, 1.0], [14400.0, 2.0], [14900.0, 1.0], [16000.0, 1.0], [15900.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [18500.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3131.0, "series": [{"data": [[0.0, 3131.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2229.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2568.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 12.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 764.9046466602126, "minX": 1.67012322E12, "maxY": 932.9960844399029, "series": [{"data": [[1.67012328E12, 932.9960844399029], [1.67012322E12, 764.9046466602126]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67012328E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 406.0, "minX": 16.0, "maxY": 21451.666666666668, "series": [{"data": [[16.0, 436.0], [20.0, 4371.0], [21.0, 21451.666666666668], [24.0, 9460.0], [26.0, 423.0], [27.0, 423.0], [30.0, 5267.0], [31.0, 13572.0], [33.0, 18038.0], [34.0, 432.0], [37.0, 14908.5], [36.0, 5369.0], [39.0, 4461.0], [41.0, 7337.0], [43.0, 18346.0], [42.0, 19344.333333333332], [45.0, 412.0], [47.0, 19070.0], [48.0, 15914.0], [51.0, 426.5], [53.0, 449.0], [52.0, 437.5], [54.0, 431.0], [60.0, 8155.5], [62.0, 426.0], [65.0, 427.0], [71.0, 6689.5], [70.0, 3399.2], [75.0, 14244.0], [74.0, 442.0], [72.0, 7373.5], [78.0, 428.0], [76.0, 7208.6], [83.0, 430.3333333333333], [81.0, 454.0], [87.0, 4964.666666666667], [86.0, 426.0], [90.0, 431.3333333333333], [89.0, 6151.4], [92.0, 15130.0], [99.0, 11099.666666666666], [103.0, 8610.666666666666], [102.0, 12574.0], [101.0, 16315.0], [100.0, 409.0], [104.0, 434.0], [111.0, 13774.0], [109.0, 15198.0], [114.0, 13683.0], [113.0, 7072.5], [118.0, 5982.6], [116.0, 438.0], [122.0, 442.0], [121.0, 441.0], [120.0, 7332.0], [127.0, 5651.0], [126.0, 439.0], [124.0, 10067.5], [135.0, 7222.000000000001], [133.0, 5513.8], [132.0, 425.0], [130.0, 4610.666666666667], [128.0, 9950.333333333334], [142.0, 7633.0], [140.0, 14621.5], [139.0, 428.0], [137.0, 436.0], [136.0, 6052.5], [150.0, 9562.333333333334], [148.0, 15720.0], [147.0, 8097.0], [158.0, 443.0], [155.0, 15701.0], [153.0, 12670.0], [152.0, 7076.5], [165.0, 7116.5], [174.0, 13135.0], [173.0, 5426.0], [171.0, 9267.0], [170.0, 10227.25], [169.0, 6222.5], [183.0, 3388.0], [180.0, 441.0], [179.0, 460.0], [177.0, 429.0], [191.0, 4235.0], [189.0, 428.0], [188.0, 6578.5], [185.0, 435.0], [198.0, 2589.1666666666665], [196.0, 12596.0], [194.0, 426.5], [192.0, 442.33333333333337], [204.0, 11485.0], [202.0, 14301.0], [215.0, 450.0], [213.0, 12609.0], [209.0, 427.0], [223.0, 4637.0], [221.0, 13099.0], [219.0, 431.5], [218.0, 4027.0], [217.0, 2850.8333333333335], [231.0, 430.0], [230.0, 448.0], [225.0, 3502.5], [234.0, 3227.6666666666665], [232.0, 438.0], [247.0, 2150.3333333333335], [242.0, 4418.333333333334], [254.0, 435.3333333333333], [253.0, 8500.0], [252.0, 435.0], [251.0, 443.0], [250.0, 449.0], [248.0, 449.5], [270.0, 6192.25], [268.0, 7470.666666666666], [267.0, 10522.0], [266.0, 10519.0], [265.0, 6441.0], [264.0, 2828.25], [262.0, 12241.0], [260.0, 436.0], [259.0, 3851.333333333333], [258.0, 429.0], [256.0, 9118.666666666666], [286.0, 14316.0], [284.0, 5284.75], [283.0, 3770.0], [282.0, 433.5], [281.0, 12379.0], [280.0, 444.5], [279.0, 8147.0], [277.0, 435.0], [275.0, 432.0], [302.0, 432.0], [301.0, 12473.0], [299.0, 418.0], [290.0, 447.6666666666667], [315.0, 855.0], [319.0, 1409.2857142857142], [318.0, 10305.0], [306.0, 442.0], [334.0, 11692.0], [323.0, 1563.9230769230771], [325.0, 1678.4285714285716], [322.0, 461.0], [335.0, 443.0], [332.0, 445.0], [331.0, 440.5], [330.0, 434.0], [328.0, 2887.5], [324.0, 9728.5], [336.0, 1611.1731601731594], [337.0, 1409.4], [339.0, 1813.75], [344.0, 2898.0], [349.0, 1957.0], [351.0, 6378.5], [348.0, 419.5], [342.0, 3728.0], [356.0, 2872.6666666666665], [357.0, 2754.4285714285716], [358.0, 5349.333333333334], [364.0, 13118.0], [353.0, 9207.0], [383.0, 7560.0], [378.0, 2632.0], [381.0, 2815.666666666667], [380.0, 439.3333333333333], [379.0, 447.0], [377.0, 422.0], [375.0, 12689.5], [373.0, 423.0], [371.0, 425.75], [396.0, 6499.0], [399.0, 2249.2], [390.0, 4463.5], [394.0, 1734.6666666666665], [397.0, 441.0], [395.0, 440.625], [392.0, 4657.5], [391.0, 11946.0], [387.0, 459.0], [385.0, 5782.0], [389.0, 12103.0], [415.0, 3237.0], [401.0, 1338.5], [410.0, 2426.0], [413.0, 5608.0], [411.0, 4783.857142857143], [408.0, 9209.0], [406.0, 3786.4], [400.0, 439.0], [405.0, 861.318181818182], [403.0, 4925.0], [402.0, 421.0], [428.0, 460.5], [430.0, 516.7142857142858], [431.0, 1003.25], [429.0, 3460.857142857143], [427.0, 2808.1818181818185], [426.0, 12470.5], [423.0, 490.5], [417.0, 442.5], [419.0, 475.0], [418.0, 6694.0], [422.0, 470.3333333333333], [421.0, 8620.5], [420.0, 6934.5], [445.0, 1084.5], [446.0, 1667.0], [444.0, 1598.5], [435.0, 4580.333333333334], [443.0, 2077.8333333333335], [442.0, 1564.5], [440.0, 2695.333333333333], [441.0, 7519.0], [447.0, 8233.6], [437.0, 885.0], [436.0, 458.5], [434.0, 3036.1111111111113], [432.0, 1002.0], [433.0, 418.0], [439.0, 2865.666666666667], [438.0, 2284.25], [450.0, 2437.25], [448.0, 1865.578947368421], [451.0, 1464.2222222222222], [449.0, 1616.0], [460.0, 2891.25], [459.0, 1792.2], [456.0, 3283.2500000000005], [457.0, 10324.0], [463.0, 3561.0], [461.0, 5311.666666666667], [458.0, 514.3333333333334], [455.0, 4141.222222222223], [454.0, 701.8], [453.0, 433.0], [476.0, 454.0], [466.0, 491.0], [468.0, 1260.0], [467.0, 1045.8], [464.0, 537.6666666666666], [471.0, 3910.272727272727], [470.0, 5696.571428571428], [469.0, 3332.0], [477.0, 8407.0], [472.0, 9458.0], [475.0, 6891.666666666666], [473.0, 12743.0], [494.0, 4301.5], [495.0, 4240.166666666666], [493.0, 6488.333333333334], [492.0, 434.0], [491.0, 437.5], [490.0, 455.5], [489.0, 448.0], [488.0, 3446.5], [487.0, 6139.666666666667], [482.0, 7512.0], [480.0, 4208.75], [486.0, 7555.5], [509.0, 11705.5], [511.0, 7118.75], [508.0, 8700.333333333334], [507.0, 6364.25], [506.0, 9119.5], [504.0, 12324.0], [501.0, 5735.4], [500.0, 7601.5], [499.0, 6625.0], [497.0, 4805.5], [496.0, 5894.5], [543.0, 2074.5555555555557], [539.0, 1932.0], [518.0, 7833.0], [517.0, 7942.5], [516.0, 8582.0], [514.0, 3160.333333333333], [513.0, 8531.5], [512.0, 439.0], [527.0, 7099.75], [525.0, 4737.0], [524.0, 8225.5], [520.0, 413.0], [541.0, 749.1666666666666], [542.0, 6011.666666666667], [535.0, 4917.5], [534.0, 461.0], [533.0, 433.6666666666667], [532.0, 8960.0], [531.0, 7776.0], [530.0, 437.0], [574.0, 6075.6], [544.0, 540.3333333333334], [556.0, 6147.666666666667], [554.0, 9509.5], [552.0, 9910.0], [557.0, 4545.5], [559.0, 9914.333333333334], [558.0, 6346.0], [575.0, 441.0], [561.0, 5333.0], [573.0, 7793.5], [572.0, 11381.0], [569.0, 455.0], [551.0, 10488.0], [547.0, 7416.0], [546.0, 4055.5], [567.0, 7310.0], [566.0, 5173.5], [594.0, 441.0], [607.0, 4692.5], [604.0, 441.0], [603.0, 484.0], [602.0, 458.5], [589.0, 444.0], [578.0, 12019.0], [577.0, 9855.0], [582.0, 2102.6], [579.0, 2557.3333333333335], [587.0, 6391.75], [586.0, 8773.8], [585.0, 1207.0], [584.0, 6834.0], [599.0, 464.0], [597.0, 4791.0], [596.0, 11064.0], [593.0, 10741.0], [592.0, 452.0], [636.0, 444.0], [634.0, 435.0], [612.0, 3106.0], [609.0, 464.0], [631.0, 7579.0], [630.0, 460.0], [629.0, 455.0], [625.0, 431.0], [624.0, 444.0], [621.0, 9411.0], [619.0, 909.75], [616.0, 454.3333333333333], [669.0, 4072.0], [644.0, 643.0], [653.0, 4241.666666666666], [643.0, 442.5], [640.0, 6107.25], [651.0, 440.0], [648.0, 7190.5], [671.0, 447.5], [668.0, 5607.75], [665.0, 443.0], [664.0, 470.0], [647.0, 441.0], [646.0, 446.5], [662.0, 8173.25], [660.0, 455.0], [659.0, 462.0], [702.0, 5447.5], [678.0, 588.0], [677.0, 6477.333333333334], [676.0, 462.0], [674.0, 450.3333333333333], [687.0, 1515.375], [684.0, 3863.0], [683.0, 442.5], [681.0, 454.0], [703.0, 5696.5], [689.0, 457.5], [688.0, 465.0], [701.0, 5986.5], [700.0, 3158.0], [698.0, 422.0], [697.0, 2604.333333333333], [692.0, 445.5], [691.0, 4935.5], [734.0, 788.0], [724.0, 765.0], [727.0, 776.0], [726.0, 1943.5], [725.0, 1528.4], [723.0, 760.5], [722.0, 858.5], [735.0, 862.8888888888889], [721.0, 467.0], [720.0, 5321.0], [732.0, 3464.0], [731.0, 3094.666666666667], [730.0, 3268.0], [728.0, 3095.6666666666665], [719.0, 4123.2], [705.0, 2409.666666666667], [704.0, 5645.0], [707.0, 6163.0], [706.0, 3118.833333333334], [710.0, 9277.0], [709.0, 437.0], [717.0, 3066.5], [715.0, 4868.0], [714.0, 431.0], [712.0, 6163.0], [736.0, 987.6666666666666], [752.0, 670.8181818181819], [751.0, 822.4444444444446], [750.0, 446.0], [749.0, 550.0], [748.0, 932.2], [747.0, 1894.6], [746.0, 2248.230769230769], [745.0, 929.0], [753.0, 633.2], [758.0, 2140.0], [755.0, 5961.0], [766.0, 3954.3333333333335], [767.0, 483.0], [765.0, 665.5], [764.0, 5865.0], [762.0, 450.0], [761.0, 480.0], [743.0, 3648.3333333333335], [742.0, 434.0], [740.0, 453.6], [737.0, 454.6666666666667], [773.0, 2613.5], [770.0, 2594.0], [769.0, 1030.0], [782.0, 484.0], [768.0, 463.5], [774.0, 2236.75], [775.0, 469.5], [793.0, 2928.0], [792.0, 498.0], [795.0, 2663.25], [794.0, 10501.0], [772.0, 736.625], [771.0, 1247.25], [779.0, 1078.142857142857], [778.0, 482.0], [777.0, 440.0], [780.0, 2022.0], [798.0, 1696.0], [787.0, 3717.2], [784.0, 464.0], [789.0, 11151.0], [788.0, 491.0], [797.0, 482.0], [815.0, 948.1428571428572], [813.0, 918.3333333333334], [811.0, 1894.5714285714284], [814.0, 3682.4], [819.0, 724.5], [821.0, 3830.0], [818.0, 1016.0], [817.0, 493.0], [816.0, 767.4], [830.0, 489.0], [828.0, 429.5], [826.0, 4014.5], [824.0, 3881.5], [806.0, 450.0], [805.0, 464.5], [804.0, 5209.2], [802.0, 3305.857142857143], [847.0, 1097.5], [838.0, 780.3333333333334], [839.0, 1153.25], [856.0, 1583.6666666666665], [855.0, 3274.5714285714284], [854.0, 473.5], [852.0, 782.0], [851.0, 1231.5], [850.0, 6067.0], [849.0, 4337.5], [863.0, 973.0], [861.0, 989.5], [858.0, 11476.0], [840.0, 1256.25], [841.0, 1086.5], [837.0, 2178.5714285714284], [836.0, 9574.0], [835.0, 445.0], [834.0, 465.0], [832.0, 4298.0], [846.0, 1200.3333333333333], [845.0, 2320.666666666667], [843.0, 2108.5], [844.0, 454.6666666666667], [842.0, 3516.0000000000005], [867.0, 1291.5], [874.0, 819.0], [876.0, 501.0], [877.0, 7991.0], [875.0, 1870.0], [872.0, 1088.3333333333333], [873.0, 3388.272727272727], [871.0, 1846.0], [891.0, 1914.6666666666667], [890.0, 1613.0], [889.0, 8981.5], [892.0, 2289.0], [888.0, 1427.0], [895.0, 1768.5], [881.0, 492.5], [880.0, 3836.5], [884.0, 1298.6666666666667], [885.0, 3795.6666666666665], [883.0, 3363.0], [882.0, 5434.0], [887.0, 4534.0], [886.0, 1864.0], [894.0, 3996.8571428571427], [870.0, 4828.0], [869.0, 2992.666666666667], [868.0, 1872.5], [866.0, 1121.0], [865.0, 8472.0], [864.0, 1135.75], [901.0, 1388.6666666666665], [899.0, 1575.3333333333333], [898.0, 3657.307692307692], [896.0, 1535.4], [908.0, 518.0], [907.0, 481.0], [906.0, 5164.333333333334], [905.0, 491.0], [900.0, 1599.0], [897.0, 585.0], [902.0, 1831.4], [920.0, 2418.6666666666665], [921.0, 545.0], [923.0, 2038.1666666666667], [926.0, 10015.0], [916.0, 7939.0], [915.0, 730.0], [914.0, 1803.0], [925.0, 5925.0], [922.0, 1714.5], [919.0, 1277.6666666666667], [918.0, 9787.0], [917.0, 2722.75], [952.0, 2017.75], [938.0, 2730.526315789474], [939.0, 2838.333333333333], [942.0, 3891.0], [929.0, 2645.0], [928.0, 7240.0], [931.0, 518.0], [930.0, 1010.0], [940.0, 633.0], [937.0, 4271.333333333334], [953.0, 1602.0000000000002], [951.0, 1812.0], [949.0, 2684.0], [948.0, 1447.6], [945.0, 5765.5], [959.0, 8111.0], [958.0, 6706.0], [954.0, 520.6666666666666], [976.0, 1797.5], [975.0, 1609.8], [985.0, 487.0], [960.0, 4385.2], [988.0, 3924.5714285714284], [987.0, 7175.0], [974.0, 2172.3999999999996], [970.0, 1091.8], [973.0, 2195.4], [972.0, 514.0], [971.0, 518.0], [969.0, 1284.6666666666667], [968.0, 497.0], [980.0, 1892.8461538461536], [982.0, 478.5], [979.0, 1521.5], [978.0, 1771.5], [977.0, 4585.0], [990.0, 1932.8333333333333], [991.0, 8117.5], [989.0, 2024.7], [1010.0, 502.0], [992.0, 2354.2], [1006.0, 1995.6], [1005.0, 8180.0], [1004.0, 10016.0], [1000.0, 6634.0], [1023.0, 6997.0], [1022.0, 2961.0], [1020.0, 482.0], [998.0, 2123.0], [993.0, 7093.0], [1014.0, 503.0], [1012.0, 10781.0], [1011.0, 7713.0], [1008.0, 1815.0], [1078.0, 463.0], [1034.0, 2709.0], [1058.0, 2401.086956521739], [1060.0, 634.5], [1066.0, 533.5], [1068.0, 497.0], [1070.0, 2271.0], [1080.0, 487.6], [1084.0, 5424.5], [1086.0, 1793.4444444444443], [1056.0, 3033.714285714286], [1076.0, 5799.5], [1074.0, 1958.5], [1072.0, 1634.0], [1038.0, 486.0], [1032.0, 3482.764705882353], [1026.0, 488.0], [1054.0, 1488.0], [1052.0, 2162.5], [1050.0, 1272.0], [1048.0, 1917.4], [1046.0, 1715.2142857142856], [1044.0, 2499.4], [1042.0, 1009.0], [1040.0, 6987.666666666667], [1140.0, 4149.0], [1148.0, 1943.1666666666665], [1122.0, 2188.6], [1102.0, 1217.6666666666665], [1142.0, 479.0], [1146.0, 957.0], [1150.0, 6853.0], [1120.0, 1277.0], [1100.0, 2251.6], [1098.0, 472.0], [1092.0, 4730.4], [1118.0, 1846.0], [1116.0, 990.6666666666667], [1114.0, 2362.3846153846152], [1108.0, 3281.5], [1126.0, 10014.0], [1130.0, 2490.8], [1134.0, 3467.8333333333335], [1124.0, 1946.0], [1164.0, 3900.666666666667], [1206.0, 2725.272727272727], [1158.0, 2087.0], [1156.0, 1385.5454545454545], [1154.0, 2329.4], [1152.0, 693.0], [1180.0, 3786.0], [1176.0, 3978.714285714286], [1174.0, 1668.5], [1172.0, 3909.428571428571], [1170.0, 9999.0], [1160.0, 2544.523809523809], [1166.0, 532.0], [1202.0, 6858.0], [1204.0, 2114.6], [1208.0, 3215.1428571428573], [1210.0, 2443.5], [1192.0, 506.0], [1186.0, 2675.666666666667], [1184.0, 2805.666666666667], [1194.0, 492.0], [1212.0, 2577.375], [1224.0, 3096.5], [1234.0, 3197.6538461538457], [1238.0, 3938.0], [1236.0, 1028.5], [1232.0, 4420.0], [1242.0, 2131.2], [1218.0, 4733.0], [1216.0, 2918.0], [1222.0, 1859.8], [1226.0, 530.5], [1228.0, 3559.0], [1230.0, 2579.6], [1244.0, 4153.75], [1264.0, 3195.1428571428573], [1266.0, 4402.0], [1270.0, 1482.8], [1268.0, 2504.363636363636], [1272.0, 2548.3333333333335], [1276.0, 788.0], [1240.0, 2131.25], [1258.0, 3842.0], [1262.0, 3219.3333333333335], [1284.0, 7694.0], [1282.0, 2667.0], [1286.0, 4623.333333333334], [1288.0, 4797.0], [1292.0, 2987.4], [1294.0, 498.0], [1330.0, 541.0], [1300.0, 1684.3333333333335], [1298.0, 4153.0], [1296.0, 2260.0], [1306.0, 4023.2], [1302.0, 495.0], [1318.0, 1557.0], [1316.0, 4084.0], [1312.0, 3835.625], [1342.0, 4939.285714285714], [1332.0, 537.0], [1356.0, 3583.75], [1348.0, 3447.8571428571427], [1358.0, 568.0], [1374.0, 3532.2], [1368.0, 5039.0], [1364.0, 2938.0], [1362.0, 1160.0], [1394.0, 2258.6], [1396.0, 2146.8999999999996], [1386.0, 3302.0], [1384.0, 1756.6666666666665], [1388.0, 479.0], [1390.0, 4756.9], [1376.0, 488.0], [1378.0, 908.5], [1380.0, 4871.0], [1402.0, 3020.0], [1400.0, 504.0], [1398.0, 3407.125], [1458.0, 2282.3333333333335], [1422.0, 3338.916666666667], [1426.0, 2963.0], [1416.0, 4438.5], [1424.0, 2183.3333333333335], [1462.0, 3658.0], [1464.0, 3939.0], [1466.0, 497.0], [1468.0, 3576.1666666666665], [1470.0, 467.0], [1420.0, 8637.0], [1418.0, 1774.0], [1410.0, 490.0], [1412.0, 2745.0], [1438.0, 521.0], [1430.0, 496.0], [1428.0, 1081.6666666666665], [1452.0, 717.0], [1448.0, 494.0], [1446.0, 3156.3333333333335], [1442.0, 4424.166666666667], [1440.0, 3528.5], [1454.0, 2638.6], [1510.0, 3315.5], [1496.0, 3037.6923076923076], [1494.0, 3021.1250000000005], [1492.0, 2405.166666666667], [1490.0, 2699.25], [1488.0, 527.0], [1514.0, 3560.624999999999], [1518.0, 3841.5], [1512.0, 2285.5], [1534.0, 4446.0], [1524.0, 3748.1250000000005], [1520.0, 3473.75], [1486.0, 2941.0], [1482.0, 6993.5], [1480.0, 3180.3333333333335], [1478.0, 3449.538461538462], [1474.0, 3068.0], [1498.0, 2797.0], [1586.0, 3020.25], [1556.0, 3615.6363636363635], [1552.0, 3194.75], [1578.0, 3415.1249999999995], [1576.0, 2424.5], [1572.0, 5127.5], [1568.0, 2373.5], [1582.0, 4094.4], [1598.0, 2134.5], [1596.0, 1958.0], [1590.0, 3346.3333333333335], [1584.0, 739.0], [1550.0, 494.0], [1548.0, 506.5], [1546.0, 4479.5], [1544.0, 5269.0], [1542.0, 522.0], [1538.0, 3318.2727272727275], [1536.0, 3872.6666666666665], [1566.0, 2038.6666666666667], [1564.0, 4534.0], [1562.0, 529.0], [1560.0, 538.0], [1558.0, 499.0], [1608.0, 1851.0], [1610.0, 820.0], [1600.0, 2217.5], [1602.0, 859.0], [1614.0, 5213.0], [1612.0, 3847.0], [1606.0, 3439.666666666667], [1604.0, 3751.5714285714284], [1073.0, 2210.2], [1053.0, 1455.6666666666667], [1063.0, 4661.6], [1061.0, 499.0], [1065.0, 501.6666666666667], [1069.0, 1807.6], [1071.0, 939.0], [1057.0, 5520.0], [1077.0, 1769.3333333333335], [1079.0, 939.1666666666666], [1083.0, 500.0], [1085.0, 5464.5], [1075.0, 2071.0], [1039.0, 3520.75], [1037.0, 8703.0], [1035.0, 4281.299999999999], [1031.0, 2085.25], [1029.0, 7237.5], [1025.0, 487.5], [1055.0, 3686.5], [1033.0, 3400.0], [1051.0, 617.5], [1045.0, 2995.3529411764703], [1041.0, 4160.0], [1047.0, 2905.0], [1101.0, 2195.2], [1103.0, 2703.6], [1137.0, 4100.0], [1139.0, 793.0], [1143.0, 2000.75], [1145.0, 3079.5], [1149.0, 3916.2999999999997], [1151.0, 482.0], [1121.0, 3731.4], [1099.0, 1420.6], [1097.0, 476.0], [1091.0, 5402.0], [1089.0, 1797.6666666666665], [1119.0, 3691.0], [1117.0, 1993.6666666666667], [1115.0, 1335.5], [1113.0, 2530.5], [1111.0, 1307.8], [1109.0, 3710.6666666666665], [1107.0, 4414.0], [1105.0, 3852.5], [1125.0, 1192.0], [1129.0, 4266.5], [1131.0, 494.0], [1123.0, 4105.0], [1159.0, 1015.6666666666666], [1157.0, 6692.0], [1153.0, 1933.0], [1183.0, 3581.5], [1181.0, 4416.0], [1177.0, 5204.0], [1175.0, 5522.5], [1173.0, 2433.333333333333], [1171.0, 752.0], [1169.0, 486.0], [1161.0, 3365.2], [1163.0, 2457.5], [1165.0, 5551.0], [1167.0, 3003.6], [1205.0, 506.5], [1207.0, 3155.75], [1209.0, 3578.0], [1211.0, 2752.857142857143], [1193.0, 2579.5], [1191.0, 1909.3333333333333], [1187.0, 2900.5], [1185.0, 5402.0], [1195.0, 516.0], [1199.0, 4578.5], [1197.0, 2698.0], [1215.0, 529.0], [1213.0, 7787.0], [1225.0, 4117.0], [1271.0, 2765.571428571429], [1237.0, 3937.0], [1235.0, 3831.5], [1239.0, 3429.0], [1233.0, 6894.25], [1241.0, 6678.666666666667], [1247.0, 4316.75], [1221.0, 4882.333333333334], [1223.0, 767.0], [1227.0, 4395.0], [1229.0, 2436.5], [1265.0, 3981.4], [1267.0, 5716.0], [1269.0, 4916.8], [1273.0, 4274.333333333333], [1275.0, 1997.0], [1279.0, 6701.0], [1253.0, 1275.0], [1249.0, 5328.75], [1277.0, 4098.0], [1259.0, 3900.75], [1261.0, 3700.4], [1257.0, 2176.0], [1287.0, 9109.0], [1331.0, 3527.6666666666665], [1283.0, 6268.0], [1289.0, 3393.5], [1293.0, 504.0], [1295.0, 1844.0], [1329.0, 3487.0], [1281.0, 2443.769230769231], [1299.0, 4003.25], [1301.0, 4440.5], [1309.0, 5603.0], [1307.0, 3580.166666666667], [1321.0, 4339.25], [1319.0, 4519.5], [1317.0, 5844.666666666666], [1313.0, 6481.0], [1327.0, 1323.0], [1325.0, 2049.0], [1343.0, 5850.0], [1341.0, 1140.0], [1339.0, 522.0], [1335.0, 4765.5], [1351.0, 503.0], [1405.0, 2337.0], [1359.0, 3222.0], [1375.0, 494.0], [1353.0, 4618.0], [1357.0, 546.0], [1373.0, 512.0], [1371.0, 3356.571428571429], [1365.0, 4937.0], [1363.0, 4761.75], [1393.0, 774.0], [1395.0, 686.0], [1397.0, 1683.3333333333335], [1383.0, 1575.75], [1385.0, 1358.8181818181818], [1391.0, 3615.8], [1407.0, 2384.8], [1377.0, 491.6666666666667], [1379.0, 3776.0], [1381.0, 1541.0], [1399.0, 3539.333333333333], [1419.0, 5458.0], [1465.0, 2858.375], [1425.0, 4946.0], [1423.0, 3136.0], [1457.0, 4756.0], [1461.0, 4956.5], [1463.0, 508.0], [1467.0, 6249.0], [1469.0, 3773.714285714286], [1421.0, 4257.0], [1417.0, 492.0], [1439.0, 3778.8571428571427], [1409.0, 487.5], [1411.0, 4211.571428571428], [1415.0, 495.0], [1413.0, 757.5], [1437.0, 3539.333333333333], [1435.0, 499.0], [1431.0, 2713.5], [1429.0, 3253.2], [1427.0, 3835.0], [1449.0, 3655.25], [1447.0, 2466.0], [1445.0, 3598.5], [1453.0, 4390.5], [1471.0, 3470.5], [1483.0, 1114.75], [1525.0, 3387.2222222222217], [1493.0, 3352.5333333333333], [1491.0, 2474.0], [1489.0, 4375.5], [1495.0, 3307.857142857143], [1515.0, 3177.4666666666667], [1517.0, 4369.857142857143], [1519.0, 3366.375], [1513.0, 3927.583333333333], [1511.0, 4316.0], [1521.0, 3236.9], [1535.0, 3889.812500000001], [1507.0, 2835.5], [1505.0, 503.0], [1509.0, 3934.8], [1531.0, 3493.6666666666665], [1523.0, 2871.8181818181815], [1487.0, 3495.3333333333335], [1481.0, 2131.0], [1479.0, 3257.8], [1477.0, 5482.0], [1473.0, 1555.5], [1501.0, 494.0], [1499.0, 1928.6666666666665], [1497.0, 3300.6666666666665], [1595.0, 2707.4285714285716], [1585.0, 4066.0], [1597.0, 4419.25], [1557.0, 2637.210526315789], [1555.0, 4285.6], [1553.0, 484.0], [1577.0, 2517.75], [1573.0, 1269.5], [1569.0, 1925.0], [1581.0, 3665.8], [1579.0, 4274.6], [1583.0, 2453.1875000000005], [1599.0, 3007.666666666667], [1591.0, 694.0], [1589.0, 4543.0], [1587.0, 6914.0], [1551.0, 516.0], [1545.0, 2085.75], [1543.0, 2574.0], [1541.0, 4169.0], [1539.0, 2900.0], [1537.0, 1661.142857142857], [1567.0, 2426.9230769230767], [1565.0, 3899.0], [1563.0, 3380.705882352941], [1559.0, 5164.0], [1601.0, 4983.5], [1615.0, 5342.0], [1605.0, 2353.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[907.1833753148658, 3140.0521410579404]], "isOverall": false, "label": "Register-Aggregated", "isController": false}, {"data": [[16.0, 448.0], [17.0, 443.0], [18.0, 441.0], [19.0, 432.5], [20.0, 437.5], [21.0, 439.0], [22.0, 437.0], [23.0, 440.0], [24.0, 432.0], [25.0, 425.0], [26.0, 18504.0], [27.0, 421.5], [28.0, 440.0], [29.0, 436.75], [30.0, 434.0], [31.0, 448.0], [33.0, 437.6666666666667], [32.0, 422.0], [35.0, 446.5], [34.0, 450.0], [37.0, 407.0], [36.0, 423.0], [39.0, 451.0], [38.0, 431.0], [41.0, 433.1666666666667], [40.0, 430.0], [43.0, 450.0], [42.0, 433.3333333333333], [45.0, 452.0], [44.0, 434.0], [47.0, 441.0], [46.0, 423.0], [48.0, 423.0], [51.0, 8781.0], [50.0, 441.5], [53.0, 437.0], [52.0, 436.0], [55.0, 440.0], [54.0, 426.0], [57.0, 439.0], [56.0, 439.5], [59.0, 430.0], [58.0, 445.0], [61.0, 406.0], [60.0, 431.5], [63.0, 424.0], [62.0, 431.0], [67.0, 431.0], [66.0, 444.0], [65.0, 424.3333333333333], [64.0, 421.0], [71.0, 425.5], [70.0, 425.0], [69.0, 458.0], [68.0, 432.0], [75.0, 441.0], [74.0, 429.0], [73.0, 429.0], [72.0, 461.0], [79.0, 452.0], [78.0, 16024.0], [77.0, 15979.0], [76.0, 436.0], [83.0, 437.0], [82.0, 454.0], [81.0, 438.5], [87.0, 6655.5], [86.0, 441.3333333333333], [85.0, 443.0], [84.0, 424.0], [91.0, 436.0], [90.0, 426.0], [89.0, 3452.2500000000005], [88.0, 425.0], [95.0, 437.0], [94.0, 439.0], [93.0, 434.0], [92.0, 16537.0], [99.0, 439.0], [97.0, 431.5], [96.0, 422.0], [103.0, 406.0], [102.0, 427.0], [101.0, 5680.0], [100.0, 409.0], [107.0, 433.0], [106.0, 432.25], [104.0, 14219.0], [111.0, 6993.5], [110.0, 14248.0], [109.0, 449.0], [115.0, 419.0], [114.0, 451.5], [113.0, 436.0], [119.0, 468.0], [118.0, 441.0], [117.0, 415.0], [116.0, 438.0], [123.0, 429.0], [122.0, 457.0], [121.0, 447.0], [120.0, 430.0], [127.0, 451.0], [126.0, 443.0], [124.0, 435.0], [135.0, 3356.25], [134.0, 415.0], [133.0, 2139.2], [132.0, 437.75], [130.0, 3351.3999999999996], [129.0, 442.0], [128.0, 414.0], [143.0, 454.0], [142.0, 5099.0], [140.0, 418.5], [139.0, 433.5], [138.0, 440.0], [137.0, 441.25], [136.0, 2602.333333333333], [150.0, 439.6666666666667], [148.0, 424.0], [147.0, 441.0], [146.0, 440.0], [145.0, 5956.5], [158.0, 428.6666666666667], [156.0, 440.5], [155.0, 10810.5], [154.0, 450.0], [153.0, 466.0], [152.0, 438.0], [166.0, 434.5], [165.0, 437.0], [164.0, 433.0], [162.0, 430.0], [161.0, 439.6666666666667], [175.0, 445.0], [174.0, 449.0], [173.0, 433.0], [171.0, 435.0], [170.0, 430.3333333333333], [169.0, 433.0], [168.0, 433.5], [183.0, 431.0], [180.0, 433.0], [179.0, 430.0], [177.0, 435.0], [176.0, 444.0], [191.0, 436.5], [189.0, 456.0], [188.0, 437.0], [186.0, 460.0], [185.0, 443.0], [198.0, 465.0], [197.0, 477.0], [196.0, 446.0], [195.0, 431.0], [194.0, 440.0], [192.0, 432.5], [207.0, 432.0], [205.0, 447.5], [204.0, 449.0], [202.0, 435.5], [201.0, 440.3333333333333], [215.0, 443.0], [213.0, 429.0], [212.0, 448.0], [211.0, 429.0], [209.0, 433.0], [223.0, 432.6], [221.0, 4116.666666666666], [220.0, 2978.5], [219.0, 431.5], [218.0, 434.0], [217.0, 439.75], [231.0, 432.5], [230.0, 455.3333333333333], [228.0, 444.0], [227.0, 428.5], [225.0, 443.5], [237.0, 433.0], [235.0, 432.6666666666667], [234.0, 439.25], [232.0, 3944.666666666667], [247.0, 703.4], [245.0, 432.3333333333333], [244.0, 467.0], [243.0, 439.0], [242.0, 435.6666666666667], [240.0, 419.6666666666667], [254.0, 437.0], [253.0, 429.5], [252.0, 433.0], [251.0, 434.0], [250.0, 428.5], [248.0, 434.0], [270.0, 436.75], [271.0, 428.0], [268.0, 429.0], [259.0, 436.5], [258.0, 444.0], [256.0, 2199.0], [267.0, 449.0], [266.0, 434.0], [265.0, 464.0], [264.0, 3207.75], [263.0, 2889.75], [262.0, 444.0], [261.0, 444.0], [260.0, 7712.0], [286.0, 437.6666666666667], [284.0, 455.5], [275.0, 429.0], [273.0, 434.5], [283.0, 452.0], [282.0, 435.0], [281.0, 438.0], [280.0, 442.5], [279.0, 449.6666666666667], [278.0, 444.0], [277.0, 433.8333333333333], [291.0, 429.0], [303.0, 433.0], [302.0, 443.6666666666667], [299.0, 444.5], [297.0, 460.0], [296.0, 450.6666666666667], [293.0, 444.0], [292.0, 455.0], [290.0, 437.0], [288.0, 451.0], [317.0, 430.0], [318.0, 440.0], [316.0, 455.5], [315.0, 439.0], [313.0, 440.0], [312.0, 463.0], [310.0, 431.0], [308.0, 5214.5], [307.0, 448.0], [306.0, 439.0], [305.0, 417.0], [334.0, 2907.25], [335.0, 447.3333333333333], [333.0, 10207.0], [332.0, 441.6666666666667], [331.0, 453.0], [330.0, 422.0], [329.0, 410.0], [328.0, 440.3333333333333], [326.0, 430.0], [323.0, 437.0], [322.0, 454.0], [320.0, 11362.0], [324.0, 2812.5], [349.0, 485.0], [336.0, 532.6216216216216], [343.0, 431.0], [342.0, 427.0], [341.0, 436.0], [340.0, 440.0], [337.0, 589.8333333333333], [339.0, 468.6666666666667], [351.0, 437.6666666666667], [350.0, 441.0], [348.0, 436.5], [347.0, 427.5], [345.0, 421.6666666666667], [366.0, 422.0], [367.0, 444.0], [365.0, 431.0], [364.0, 431.0], [363.0, 452.0], [362.0, 435.0], [361.0, 443.0], [360.0, 418.5], [358.0, 447.6666666666667], [354.0, 433.0], [353.0, 441.3333333333333], [356.0, 439.0], [380.0, 443.0], [383.0, 445.0], [378.0, 505.0], [381.0, 440.6666666666667], [379.0, 3432.0], [377.0, 436.5], [375.0, 435.0], [371.0, 432.75], [368.0, 434.0], [374.0, 458.0], [373.0, 440.0], [372.0, 435.0], [396.0, 445.0], [399.0, 551.3999999999999], [390.0, 537.0], [394.0, 526.0000000000001], [397.0, 426.0], [395.0, 1078.6666666666667], [392.0, 6736.0], [391.0, 436.0], [385.0, 436.0], [384.0, 434.5], [387.0, 430.0], [386.0, 422.0], [389.0, 443.0], [388.0, 439.5], [402.0, 411.0], [413.0, 460.6666666666667], [401.0, 1647.25], [400.0, 438.6666666666667], [411.0, 449.25], [409.0, 429.0], [408.0, 2775.75], [406.0, 445.3333333333333], [405.0, 2493.0], [404.0, 433.0], [403.0, 436.0], [428.0, 456.5], [430.0, 436.8], [431.0, 441.1428571428571], [429.0, 453.0], [427.0, 460.6666666666667], [426.0, 468.0], [423.0, 488.0], [417.0, 455.0], [419.0, 468.5], [418.0, 470.0], [422.0, 438.0], [421.0, 456.3333333333333], [420.0, 442.0], [445.0, 495.3333333333333], [435.0, 462.24999999999994], [446.0, 456.0], [444.0, 437.0], [443.0, 2215.0], [442.0, 463.3333333333333], [440.0, 462.0], [441.0, 428.0], [447.0, 3511.666666666667], [439.0, 463.25], [438.0, 443.0], [432.0, 455.0], [434.0, 468.54545454545456], [433.0, 441.5], [437.0, 467.4], [436.0, 480.0], [460.0, 545.3999999999999], [448.0, 1339.5454545454545], [451.0, 549.8500000000001], [450.0, 503.99999999999994], [449.0, 571.75], [459.0, 550.3333333333333], [458.0, 485.1818181818182], [457.0, 1732.0000000000002], [456.0, 491.0], [463.0, 436.0], [462.0, 429.5], [461.0, 424.8], [455.0, 506.39130434782595], [454.0, 506.8181818181818], [453.0, 445.6666666666667], [466.0, 684.0], [467.0, 675.4], [468.0, 727.6], [465.0, 602.0], [464.0, 1483.5], [469.0, 580.5], [471.0, 442.7272727272727], [470.0, 3510.0], [479.0, 447.0], [473.0, 438.0], [472.0, 2722.333333333333], [475.0, 1753.5], [474.0, 440.0], [477.0, 447.6666666666667], [476.0, 435.83333333333337], [494.0, 461.0], [495.0, 443.5], [493.0, 445.0], [482.0, 442.5], [480.0, 449.0], [491.0, 441.0], [490.0, 449.5], [489.0, 461.0], [488.0, 451.5], [487.0, 3493.333333333333], [486.0, 451.0], [484.0, 1657.4999999999998], [510.0, 452.0], [511.0, 449.0], [509.0, 457.0], [508.0, 3084.0], [507.0, 449.5], [506.0, 2999.0], [504.0, 449.5], [502.0, 431.0], [496.0, 439.0], [499.0, 435.0], [497.0, 448.0], [501.0, 443.0], [500.0, 2462.0], [537.0, 455.6666666666667], [542.0, 456.5], [541.0, 475.0], [543.0, 486.5], [531.0, 435.0], [530.0, 438.5], [540.0, 442.0], [539.0, 442.6666666666667], [527.0, 7095.5], [514.0, 431.0], [513.0, 453.5], [516.0, 446.0], [515.0, 477.0], [518.0, 444.0], [517.0, 471.0], [526.0, 455.5], [525.0, 436.0], [524.0, 434.75], [521.0, 454.0], [520.0, 454.0], [535.0, 444.5], [534.0, 434.0], [533.0, 461.0], [532.0, 454.5], [551.0, 438.0], [572.0, 463.5], [544.0, 524.0], [556.0, 488.16666666666663], [554.0, 433.5], [552.0, 443.0], [557.0, 459.0], [559.0, 449.0], [558.0, 449.0], [575.0, 420.0], [561.0, 446.0], [565.0, 2038.5], [562.0, 434.0], [567.0, 458.0], [566.0, 447.0], [574.0, 434.5], [573.0, 435.0], [570.0, 443.0], [569.0, 440.5], [568.0, 436.0], [548.0, 446.5], [547.0, 439.3333333333333], [546.0, 446.5], [545.0, 443.0], [602.0, 486.0], [606.0, 437.0], [607.0, 466.0], [593.0, 496.5], [592.0, 426.0], [596.0, 476.0], [594.0, 459.0], [605.0, 468.0], [604.0, 482.5], [603.0, 475.0], [601.0, 470.0], [583.0, 460.6666666666667], [582.0, 448.0], [581.0, 439.0], [579.0, 438.0], [578.0, 1774.5], [577.0, 4569.0], [576.0, 434.0], [590.0, 431.5], [589.0, 430.0], [588.0, 431.0], [587.0, 445.4], [586.0, 436.0], [585.0, 433.5], [584.0, 2013.6], [599.0, 482.5], [597.0, 469.0], [637.0, 442.5], [616.0, 484.6], [617.0, 474.0], [618.0, 542.5], [639.0, 449.0], [636.0, 448.5], [634.0, 446.0], [622.0, 444.0], [609.0, 470.0], [608.0, 474.0], [612.0, 463.0], [611.0, 459.0], [615.0, 458.0], [614.0, 453.25], [621.0, 449.0], [620.0, 443.0], [619.0, 444.5], [631.0, 459.0], [630.0, 464.0], [629.0, 449.25], [625.0, 444.3333333333333], [665.0, 454.0], [669.0, 475.0], [671.0, 463.5], [657.0, 457.5], [659.0, 462.0], [658.0, 469.0], [668.0, 481.0], [667.0, 2009.0], [666.0, 451.0], [664.0, 4263.0], [647.0, 432.0], [646.0, 441.0], [645.0, 434.0], [644.0, 434.0], [643.0, 438.6666666666667], [640.0, 437.6666666666667], [655.0, 2711.0], [654.0, 457.0], [653.0, 440.3333333333333], [651.0, 416.0], [650.0, 446.0], [649.0, 450.5], [648.0, 440.0], [663.0, 460.0], [662.0, 449.6666666666667], [696.0, 449.0], [702.0, 440.0], [703.0, 7861.0], [688.0, 456.0], [701.0, 1418.75], [700.0, 2327.5], [697.0, 1578.142857142857], [687.0, 454.25], [673.0, 452.0], [676.0, 462.25], [674.0, 463.0], [679.0, 444.5], [677.0, 457.0], [686.0, 438.0], [684.0, 463.0], [683.0, 436.0], [682.0, 457.0], [681.0, 459.0], [694.0, 455.0], [692.0, 448.0], [691.0, 457.5], [689.0, 441.0], [731.0, 458.5], [723.0, 576.4], [727.0, 626.5], [726.0, 651.1666666666667], [725.0, 605.8333333333333], [722.0, 786.0], [721.0, 460.0], [720.0, 450.0], [735.0, 977.3333333333333], [732.0, 444.6666666666667], [730.0, 447.3333333333333], [728.0, 2448.0], [719.0, 444.0], [704.0, 437.5], [706.0, 438.2], [705.0, 434.0], [708.0, 470.0], [707.0, 461.0], [710.0, 463.0], [709.0, 2322.6666666666665], [718.0, 441.0], [717.0, 448.5], [715.0, 1069.5], [714.0, 461.5], [712.0, 458.0], [761.0, 455.5], [750.0, 585.6666666666666], [736.0, 645.0], [752.0, 631.5454545454545], [766.0, 660.25], [765.0, 781.75], [764.0, 459.0], [762.0, 443.5], [743.0, 4405.0], [741.0, 439.5], [740.0, 461.6666666666667], [738.0, 456.0], [737.0, 458.0], [751.0, 833.7], [748.0, 1183.125], [749.0, 463.0], [747.0, 2430.25], [746.0, 736.2], [745.0, 570.25], [753.0, 773.2857142857143], [758.0, 657.8333333333333], [756.0, 452.0], [755.0, 440.3333333333333], [754.0, 478.0], [759.0, 439.5], [770.0, 728.6666666666666], [769.0, 622.6666666666666], [768.0, 1115.2857142857142], [783.0, 437.0], [782.0, 490.5], [781.0, 4953.25], [774.0, 581.8], [775.0, 470.0], [793.0, 466.5], [792.0, 2300.333333333333], [795.0, 509.0], [794.0, 485.0], [773.0, 740.0], [772.0, 539.8], [771.0, 698.75], [779.0, 849.25], [780.0, 1614.125], [778.0, 613.6], [777.0, 457.5], [798.0, 489.3333333333333], [786.0, 474.0], [784.0, 476.5], [788.0, 461.0], [787.0, 471.3333333333333], [791.0, 474.75], [790.0, 882.0], [797.0, 483.5], [815.0, 494.14285714285717], [813.0, 722.5], [811.0, 1026.5714285714287], [810.0, 3235.2], [808.0, 447.0], [812.0, 431.0], [814.0, 648.875], [819.0, 476.25], [820.0, 445.0], [823.0, 1549.0], [821.0, 442.0], [818.0, 510.0], [817.0, 473.6666666666667], [816.0, 489.25], [830.0, 454.0], [829.0, 454.3333333333333], [828.0, 430.0], [826.0, 2272.5], [806.0, 448.5], [805.0, 469.25], [804.0, 1772.6666666666667], [802.0, 483.5], [856.0, 562.0], [847.0, 673.1428571428571], [840.0, 907.6], [841.0, 1195.0], [839.0, 499.0], [857.0, 619.0], [859.0, 442.5], [858.0, 3443.0], [861.0, 446.0], [860.0, 492.0], [863.0, 791.5714285714286], [862.0, 578.0], [849.0, 996.25], [850.0, 842.5], [848.0, 751.5], [853.0, 994.5], [852.0, 468.0], [851.0, 1782.5], [855.0, 676.8333333333333], [854.0, 645.0], [838.0, 1482.0], [837.0, 968.3333333333334], [836.0, 455.0], [835.0, 452.5], [833.0, 454.3333333333333], [832.0, 427.0], [846.0, 549.0], [845.0, 739.7], [843.0, 756.0], [844.0, 935.8333333333333], [842.0, 1015.090909090909], [891.0, 612.2], [867.0, 1482.6666666666667], [874.0, 900.4], [875.0, 748.0], [876.0, 507.0], [878.0, 657.5], [877.0, 466.3333333333333], [873.0, 629.125], [872.0, 585.0], [871.0, 576.75], [888.0, 510.0], [890.0, 698.5], [889.0, 496.2], [893.0, 1018.1428571428571], [892.0, 3172.6666666666665], [895.0, 1284.5], [880.0, 470.0], [882.0, 680.4], [881.0, 765.1666666666666], [884.0, 727.5], [885.0, 2254.5], [883.0, 539.9000000000001], [887.0, 509.2], [886.0, 685.0], [894.0, 544.1666666666667], [870.0, 818.5], [869.0, 1179.3333333333333], [868.0, 461.5], [866.0, 737.4285714285714], [865.0, 483.0], [864.0, 568.6666666666666], [923.0, 938.0], [900.0, 907.3333333333334], [901.0, 692.5714285714286], [899.0, 936.3333333333334], [898.0, 1252.1818181818182], [896.0, 906.3000000000001], [908.0, 495.5], [907.0, 1964.0], [906.0, 1837.75], [905.0, 502.0], [897.0, 760.75], [902.0, 576.0], [919.0, 872.75], [918.0, 776.5], [917.0, 669.0], [916.0, 2195.5], [922.0, 1152.75], [921.0, 520.0], [920.0, 642.0], [903.0, 488.5], [927.0, 515.0], [912.0, 490.4], [915.0, 501.0], [914.0, 494.6666666666667], [926.0, 1342.0], [925.0, 725.5], [953.0, 653.25], [938.0, 1512.75], [937.0, 577.5], [939.0, 1103.5], [952.0, 560.0], [935.0, 511.0], [933.0, 498.5], [930.0, 520.0], [929.0, 518.0], [928.0, 1430.0], [943.0, 523.5], [942.0, 532.3333333333334], [940.0, 516.0], [959.0, 487.0], [945.0, 2822.166666666667], [948.0, 822.5], [947.0, 508.0], [958.0, 519.0], [956.0, 505.5], [954.0, 506.0], [951.0, 503.6666666666667], [949.0, 518.0], [987.0, 517.6666666666666], [976.0, 1209.6666666666667], [974.0, 946.0], [975.0, 1963.0], [960.0, 520.5], [967.0, 492.0], [961.0, 510.0], [986.0, 1142.0], [985.0, 487.3333333333333], [988.0, 2049.6666666666665], [990.0, 1014.2857142857144], [991.0, 483.0], [989.0, 730.6666666666665], [973.0, 682.1428571428571], [972.0, 516.0], [970.0, 808.1666666666666], [969.0, 723.2], [980.0, 1598.5714285714287], [982.0, 494.3333333333333], [979.0, 677.0], [978.0, 579.8], [977.0, 491.6666666666667], [1022.0, 3850.0], [992.0, 1453.4], [1006.0, 563.5], [1004.0, 484.0], [1003.0, 481.0], [1002.0, 1190.25], [1000.0, 497.0], [1023.0, 492.0], [1008.0, 479.5], [1020.0, 494.0], [1018.0, 486.3333333333333], [1016.0, 477.0], [999.0, 514.0], [998.0, 489.5], [995.0, 507.5], [993.0, 497.0], [1014.0, 504.5], [1012.0, 505.0], [1011.0, 1022.0], [1010.0, 486.0], [1078.0, 497.5], [1034.0, 966.2857142857144], [1058.0, 926.8148148148148], [1060.0, 500.0], [1062.0, 495.0], [1066.0, 529.0], [1068.0, 469.0], [1070.0, 799.0], [1082.0, 1029.0], [1080.0, 777.25], [1084.0, 489.75], [1056.0, 3487.333333333333], [1086.0, 760.75], [1076.0, 1022.8333333333333], [1074.0, 766.6666666666666], [1072.0, 732.4], [1038.0, 488.0], [1036.0, 509.0], [1032.0, 1298.8], [1028.0, 491.6666666666667], [1026.0, 486.0], [1054.0, 522.0], [1052.0, 1515.5], [1050.0, 748.6], [1048.0, 699.1250000000001], [1046.0, 576.875], [1044.0, 502.0], [1042.0, 3317.666666666667], [1040.0, 494.0], [1092.0, 982.5], [1122.0, 1088.0], [1102.0, 579.0], [1104.0, 1082.0], [1108.0, 503.0], [1110.0, 489.0], [1114.0, 1190.0], [1116.0, 2676.0], [1088.0, 481.0], [1090.0, 501.0], [1096.0, 2079.0], [1094.0, 481.5], [1118.0, 728.0], [1136.0, 501.0], [1138.0, 809.0], [1140.0, 512.0], [1142.0, 492.5], [1148.0, 532.8], [1146.0, 496.0], [1150.0, 496.0], [1120.0, 730.2499999999999], [1100.0, 600.0], [1126.0, 495.5], [1128.0, 484.3333333333333], [1130.0, 3875.8], [1132.0, 495.0], [1134.0, 965.25], [1124.0, 1334.5], [1158.0, 1509.8333333333335], [1156.0, 1159.125], [1154.0, 971.5], [1152.0, 560.6666666666666], [1180.0, 833.0], [1178.0, 488.0], [1176.0, 2210.8333333333335], [1174.0, 490.5], [1172.0, 889.0000000000001], [1170.0, 484.0], [1160.0, 776.0909090909091], [1192.0, 1095.5], [1186.0, 524.5], [1184.0, 506.0], [1194.0, 1290.0], [1198.0, 505.0], [1214.0, 545.3333333333334], [1212.0, 918.5454545454546], [1210.0, 1196.0], [1208.0, 960.3333333333334], [1206.0, 996.363636363636], [1204.0, 486.5], [1202.0, 851.0], [1166.0, 490.0], [1164.0, 1075.5833333333333], [1162.0, 488.0], [1226.0, 513.0], [1242.0, 820.5], [1234.0, 1259.2500000000002], [1238.0, 938.5], [1236.0, 1536.6], [1232.0, 1091.0], [1240.0, 975.3333333333334], [1246.0, 532.0], [1244.0, 479.75], [1264.0, 591.5], [1230.0, 2227.0], [1228.0, 498.3333333333333], [1224.0, 637.0], [1222.0, 509.5], [1220.0, 546.5], [1218.0, 558.5], [1216.0, 862.5], [1266.0, 2037.3333333333335], [1268.0, 885.5], [1270.0, 910.3333333333334], [1272.0, 915.6666666666666], [1276.0, 506.0], [1278.0, 512.0], [1258.0, 873.5], [1262.0, 527.0], [1310.0, 489.0], [1336.0, 513.0], [1282.0, 1428.5], [1280.0, 2163.0], [1306.0, 1577.3333333333333], [1304.0, 2706.5], [1302.0, 754.25], [1300.0, 489.0], [1298.0, 487.0], [1296.0, 2998.6666666666665], [1320.0, 498.5], [1318.0, 3018.0], [1312.0, 514.5], [1326.0, 557.0], [1330.0, 512.5], [1328.0, 486.0], [1294.0, 486.0], [1292.0, 629.2], [1288.0, 504.0], [1286.0, 500.3333333333333], [1284.0, 493.0], [1332.0, 531.0], [1334.0, 521.0], [1342.0, 504.0], [1338.0, 673.3333333333334], [1356.0, 529.6666666666666], [1344.0, 524.0], [1348.0, 501.0], [1350.0, 531.25], [1358.0, 562.5], [1374.0, 638.0], [1370.0, 495.0], [1368.0, 1208.0], [1366.0, 1242.0], [1364.0, 915.3333333333334], [1362.0, 1812.4], [1360.0, 639.3333333333334], [1392.0, 635.0], [1394.0, 1810.0], [1396.0, 497.75], [1398.0, 506.3333333333333], [1380.0, 513.0], [1378.0, 549.0], [1384.0, 490.0], [1388.0, 493.0], [1386.0, 2151.6666666666665], [1390.0, 831.25], [1402.0, 858.1666666666667], [1400.0, 488.5], [1420.0, 1698.3333333333335], [1416.0, 1802.0], [1426.0, 1730.6666666666667], [1424.0, 1917.6], [1422.0, 2296.5333333333333], [1418.0, 494.0], [1458.0, 1604.8000000000002], [1462.0, 492.0], [1464.0, 515.0], [1466.0, 1833.0], [1468.0, 464.0], [1410.0, 510.0], [1412.0, 511.0], [1438.0, 510.5], [1432.0, 529.0], [1430.0, 497.75], [1428.0, 489.0], [1452.0, 1171.3333333333333], [1448.0, 2721.0], [1446.0, 496.5], [1444.0, 491.6666666666667], [1442.0, 1642.5294117647054], [1440.0, 619.2], [1454.0, 488.3333333333333], [1470.0, 463.0], [1522.0, 486.0], [1530.0, 489.0], [1494.0, 1149.6000000000001], [1496.0, 1430.0833333333333], [1492.0, 682.3333333333334], [1490.0, 769.1666666666667], [1488.0, 509.0], [1514.0, 1915.1666666666665], [1518.0, 2659.3333333333335], [1512.0, 1431.0], [1510.0, 4009.0], [1508.0, 507.0], [1504.0, 489.0], [1486.0, 509.6], [1482.0, 499.0], [1480.0, 489.5], [1478.0, 1602.222222222222], [1474.0, 1419.3333333333333], [1472.0, 766.0], [1498.0, 1044.3333333333333], [1524.0, 951.2857142857143], [1526.0, 496.0], [1528.0, 6305.0], [1534.0, 2823.6], [1588.0, 1959.0], [1598.0, 1932.5], [1556.0, 1891.5], [1552.0, 1572.0], [1578.0, 1806.0], [1582.0, 3118.0], [1568.0, 1012.0], [1572.0, 1010.5], [1576.0, 598.0], [1592.0, 2498.0], [1590.0, 2744.5], [1586.0, 1184.0], [1584.0, 738.5], [1548.0, 493.5], [1546.0, 522.0], [1544.0, 512.0], [1542.0, 5784.0], [1538.0, 943.5], [1536.0, 1873.0], [1566.0, 2348.3333333333335], [1564.0, 1344.0], [1562.0, 1664.5], [1560.0, 539.0], [1558.0, 2810.0], [1596.0, 698.6666666666666], [1608.0, 1237.0], [1612.0, 1471.6666666666667], [1600.0, 681.0], [1602.0, 857.0], [1614.0, 2627.0], [1610.0, 2646.5], [1606.0, 1773.0], [1604.0, 1402.2500000000002], [1073.0, 554.5], [1053.0, 992.6], [1061.0, 497.0], [1065.0, 929.3333333333334], [1063.0, 1122.5], [1067.0, 484.0], [1069.0, 1083.0], [1071.0, 711.0], [1057.0, 2209.6666666666665], [1077.0, 640.3333333333334], [1079.0, 2995.0], [1083.0, 2608.5], [1087.0, 488.0], [1075.0, 592.4], [1039.0, 1174.0], [1037.0, 493.5], [1035.0, 1139.3333333333333], [1031.0, 696.8], [1029.0, 492.6666666666667], [1025.0, 1249.0], [1055.0, 805.0], [1033.0, 577.0], [1051.0, 1216.75], [1047.0, 629.0], [1045.0, 595.8], [1041.0, 1123.0], [1119.0, 849.0], [1139.0, 596.3333333333334], [1149.0, 596.9285714285714], [1105.0, 497.0], [1107.0, 1121.5], [1109.0, 835.8333333333334], [1113.0, 1049.5], [1111.0, 821.0], [1115.0, 682.6666666666667], [1117.0, 665.25], [1089.0, 1354.6], [1091.0, 640.7142857142858], [1099.0, 1499.25], [1097.0, 485.0], [1103.0, 1212.25], [1137.0, 497.0], [1141.0, 1262.0], [1145.0, 1739.5], [1143.0, 939.25], [1151.0, 641.0], [1121.0, 529.25], [1101.0, 907.4], [1125.0, 780.5], [1129.0, 772.0], [1131.0, 500.0], [1133.0, 479.0], [1135.0, 516.0], [1123.0, 979.8888888888888], [1161.0, 1146.8], [1157.0, 529.0], [1155.0, 970.0], [1153.0, 632.6666666666666], [1183.0, 1251.8], [1179.0, 490.5], [1177.0, 841.0], [1175.0, 483.0], [1173.0, 1658.5], [1171.0, 1266.8], [1169.0, 483.3333333333333], [1159.0, 587.0], [1193.0, 1016.125], [1191.0, 512.0], [1187.0, 509.5], [1185.0, 538.0], [1197.0, 486.0], [1195.0, 1237.5], [1199.0, 3818.5], [1215.0, 1695.6666666666665], [1213.0, 988.6666666666666], [1211.0, 896.8000000000001], [1209.0, 2323.6], [1207.0, 1033.0], [1205.0, 752.0], [1203.0, 493.5], [1201.0, 758.3333333333333], [1167.0, 1111.6666666666667], [1165.0, 1144.5], [1163.0, 1212.0], [1265.0, 577.3333333333334], [1231.0, 1071.0], [1237.0, 1022.0000000000001], [1239.0, 2184.3333333333335], [1233.0, 1515.375], [1243.0, 883.0], [1229.0, 2230.0], [1227.0, 2332.0], [1223.0, 1983.25], [1221.0, 1228.0], [1247.0, 669.75], [1267.0, 5313.0], [1269.0, 839.4], [1275.0, 507.5], [1273.0, 711.0], [1277.0, 506.0], [1279.0, 646.0], [1249.0, 496.5], [1253.0, 486.0], [1251.0, 2535.0], [1271.0, 1035.0], [1259.0, 830.0], [1261.0, 1250.6666666666667], [1257.0, 816.4615384615385], [1241.0, 786.6666666666667], [1331.0, 682.0], [1341.0, 4257.666666666667], [1281.0, 2864.2999999999993], [1309.0, 526.5], [1307.0, 655.6], [1301.0, 722.0], [1299.0, 480.0], [1321.0, 1023.5], [1319.0, 512.5], [1317.0, 522.0], [1313.0, 524.5], [1325.0, 648.5714285714286], [1323.0, 6708.0], [1327.0, 523.0], [1329.0, 711.0], [1295.0, 769.3333333333333], [1293.0, 694.3333333333334], [1289.0, 1522.0], [1287.0, 792.6666666666666], [1285.0, 491.0], [1283.0, 468.5], [1333.0, 1189.0], [1335.0, 520.0], [1337.0, 510.0], [1343.0, 2254.0], [1339.0, 491.0], [1347.0, 1120.6666666666667], [1403.0, 2909.3333333333335], [1359.0, 1226.6666666666667], [1375.0, 755.0], [1353.0, 541.6666666666666], [1355.0, 517.0], [1357.0, 512.5], [1373.0, 484.0], [1371.0, 1718.1666666666667], [1367.0, 1613.0], [1365.0, 772.0], [1363.0, 549.0], [1393.0, 484.5], [1395.0, 634.5], [1397.0, 482.0], [1383.0, 1082.2], [1381.0, 828.0], [1379.0, 481.5], [1377.0, 555.25], [1385.0, 1045.5], [1391.0, 670.0], [1407.0, 2139.0], [1405.0, 489.5], [1401.0, 497.0], [1399.0, 485.5], [1457.0, 501.75], [1465.0, 765.9999999999999], [1425.0, 3889.0], [1417.0, 652.0], [1423.0, 1420.0], [1459.0, 512.0], [1461.0, 629.0], [1463.0, 1090.0], [1467.0, 490.0], [1439.0, 633.5], [1409.0, 1904.2], [1411.0, 792.0], [1415.0, 933.6666666666666], [1413.0, 887.0], [1437.0, 824.5], [1435.0, 1076.0], [1431.0, 492.0], [1429.0, 1113.0], [1427.0, 2604.333333333333], [1451.0, 470.5], [1449.0, 501.0], [1447.0, 485.5], [1445.0, 488.0], [1443.0, 493.5], [1441.0, 1309.0], [1453.0, 1496.3333333333333], [1471.0, 488.5], [1469.0, 2191.8571428571427], [1505.0, 487.0], [1493.0, 936.6666666666666], [1491.0, 862.6666666666666], [1489.0, 507.0], [1495.0, 3586.666666666667], [1515.0, 1978.6666666666665], [1517.0, 1736.1666666666667], [1519.0, 972.4444444444445], [1513.0, 1866.6666666666667], [1511.0, 485.0], [1509.0, 490.0], [1507.0, 493.5], [1521.0, 1723.25], [1487.0, 1664.6666666666665], [1485.0, 524.0], [1483.0, 497.75], [1481.0, 872.0], [1479.0, 497.2], [1477.0, 499.6], [1473.0, 492.5], [1503.0, 480.0], [1501.0, 571.1666666666666], [1499.0, 506.0], [1497.0, 501.5], [1523.0, 1216.1666666666667], [1525.0, 486.8333333333333], [1527.0, 2131.0], [1529.0, 535.3333333333334], [1531.0, 541.0], [1533.0, 480.6666666666667], [1535.0, 1893.75], [1591.0, 3362.0], [1585.0, 733.0], [1593.0, 1484.0], [1557.0, 1458.1176470588234], [1555.0, 527.0], [1553.0, 512.3333333333334], [1581.0, 2156.6666666666665], [1579.0, 575.0], [1583.0, 714.0], [1577.0, 1145.0], [1599.0, 1380.2000000000003], [1571.0, 2258.0], [1569.0, 1798.6666666666665], [1573.0, 602.3333333333334], [1575.0, 2284.5], [1597.0, 1610.25], [1595.0, 1267.0], [1589.0, 2351.0], [1587.0, 3513.5], [1551.0, 659.75], [1547.0, 499.0], [1545.0, 511.6666666666667], [1543.0, 2428.25], [1541.0, 2942.2], [1539.0, 2211.4], [1537.0, 491.5], [1567.0, 3677.0], [1565.0, 500.0], [1563.0, 1322.0], [1559.0, 520.0], [1601.0, 1871.6666666666667], [1615.0, 985.0], [1613.0, 1574.5]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[871.3327455919417, 987.1010075566761]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1615.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8795.716666666667, "minX": 1.67012322E12, "maxY": 67739.85, "series": [{"data": [[1.67012328E12, 67739.85], [1.67012322E12, 23738.883333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67012328E12, 24964.45], [1.67012322E12, 8795.716666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67012328E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 806.6177437020812, "minX": 1.67012322E12, "maxY": 3731.9620163294235, "series": [{"data": [[1.67012328E12, 3731.9620163294235], [1.67012322E12, 1693.9028620988709]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.67012328E12, 1041.0039254170747], [1.67012322E12, 806.6177437020812]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67012328E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 806.5980284775467, "minX": 1.67012322E12, "maxY": 3652.3794817181406, "series": [{"data": [[1.67012328E12, 3652.3794817181406], [1.67012322E12, 1693.810928013875]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.67012328E12, 1040.9898593392184], [1.67012322E12, 806.5980284775467]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67012328E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67012322E12, "maxY": 2465.4618388356375, "series": [{"data": [[1.67012328E12, 2465.4618388356375], [1.67012322E12, 862.491760624457]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.67012328E12, 0.08112528622832842], [1.67012322E12, 0.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67012328E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 404.0, "minX": 1.67012322E12, "maxY": 21684.0, "series": [{"data": [[1.67012328E12, 21684.0], [1.67012322E12, 4674.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67012328E12, 404.0], [1.67012322E12, 419.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67012328E12, 7367.499999999999], [1.67012322E12, 2661.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67012328E12, 14193.169999999995], [1.67012322E12, 3881.4099999999944]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67012328E12, 502.0], [1.67012322E12, 922.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67012328E12, 9684.699999999999], [1.67012322E12, 3157.0499999999975]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67012328E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 432.0, "minX": 1.0, "maxY": 21334.0, "series": [{"data": [[555.0, 452.0], [599.0, 782.0], [675.0, 548.0], [42.0, 434.5], [714.0, 458.0], [49.0, 1541.0], [808.0, 510.0], [833.0, 503.0], [57.0, 1338.0], [5.0, 436.0], [103.0, 437.0], [122.0, 443.0], [11.0, 437.0], [209.0, 441.0], [237.0, 2281.0], [1.0, 448.0], [301.0, 930.0], [18.0, 432.0], [318.0, 984.0], [319.0, 1093.0], [308.0, 1187.5], [353.0, 806.0], [380.0, 1613.0], [23.0, 444.0], [410.0, 564.5], [25.0, 435.0], [436.0, 440.0], [29.0, 435.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[18.0, 21334.0], [23.0, 18824.5], [25.0, 18644.0], [29.0, 19373.0], [122.0, 15222.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 833.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2281.0, "series": [{"data": [[555.0, 452.0], [599.0, 782.0], [675.0, 548.0], [42.0, 434.5], [714.0, 458.0], [49.0, 1541.0], [808.0, 510.0], [833.0, 503.0], [57.0, 1331.0], [5.0, 436.0], [103.0, 437.0], [122.0, 443.0], [11.0, 437.0], [209.0, 441.0], [237.0, 2281.0], [1.0, 448.0], [301.0, 930.0], [18.0, 432.0], [318.0, 984.0], [319.0, 1093.0], [308.0, 1187.5], [353.0, 806.0], [380.0, 1613.0], [23.0, 443.0], [410.0, 564.0], [25.0, 435.0], [436.0, 440.0], [29.0, 435.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[18.0, 0.0], [23.0, 0.0], [25.0, 0.0], [29.0, 0.0], [122.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 833.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 55.53333333333333, "minX": 1.67012322E12, "maxY": 76.8, "series": [{"data": [[1.67012328E12, 76.8], [1.67012322E12, 55.53333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67012328E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.67012322E12, "maxY": 97.7, "series": [{"data": [[1.67012328E12, 97.7], [1.67012322E12, 34.43333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67012328E12, 0.18333333333333332]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.67012328E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67012328E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.67012322E12, "maxY": 50.95, "series": [{"data": [[1.67012328E12, 46.75], [1.67012322E12, 19.216666666666665]], "isOverall": false, "label": "Register-success", "isController": false}, {"data": [[1.67012328E12, 0.2]], "isOverall": false, "label": "Register-failure", "isController": false}, {"data": [[1.67012328E12, 50.95], [1.67012322E12, 15.216666666666667]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67012328E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.67012322E12, "maxY": 97.7, "series": [{"data": [[1.67012328E12, 97.7], [1.67012322E12, 34.43333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.67012328E12, 0.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67012328E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

